{"version":3,"sources":["webpack://hiynn-design/./components/hd-searchForm/index.js","webpack://hiynn-design/./src/pages/HdSearchFormPage.js","webpack://hiynn-design/./src/md/hd-searchForm/intro.md","webpack://hiynn-design/./src/md/hd-searchForm/example.md","webpack://hiynn-design/./src/md/hd-searchForm/api.md"],"names":["FormItem","es_form","Item","HdTreeEdit","renderFormDom","item","domEl","getFieldDecorator","_this","props","form","type","react_default","a","createElement","input","placeholder","concat","label","style","width","es_select","onChange","key","optionFilterProp","showSearch","children","map","opt","index","Option","value","es_checkbox","Group","options","es_radio","date_picker","locale","format","RangePicker","showTime","initialValue","_this2","this","_this$props","searchFormOption","layout","disabled","className","forms","btns","btn","es_button","icon","onClick","handleClick","Component","SearchForm","create","HdSearchFormPage","handleChange","val","searchFormRef","validateFields","err","values","console","log","handleAdd","preview_layout","md_previewer","md","code_previewer","code","showCode","hd_searchForm","wrappedComponentRef"],"mappings":"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","file":"static/js/15.chunk.js","sourcesContent":["import React,{ Component} from 'react'\nimport {Form,Input,Select,Button,DatePicker,Checkbox,Radio} from 'antd'\nconst FormItem = Form.Item;\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport './style'\nclass HdTreeEdit extends Component{\n    renderFormDom = (item)=>{\n        let domEl = null;\n        const {form} = this.props;       \n        const{getFieldDecorator} = form;\n        switch(item.type){\n            case \"input\":\n                domEl = <Input placeholder={`请输入${item.label}`} style={{ width: item.width }}/>\n                break;\n            case \"select\":\n                domEl = <Select\n                        onChange = {this[`${item.key}Change`]}\n                        placeholder=\"请选择\"\n                        optionFilterProp =\"children\"\n                        style={{ width: item.width }}\n                        showSearch = {item.showSearch}\n                        >\n                    {item.children.map((opt,index)=>(\n                        <Select.Option key = {index} value = {opt.value} >\n                            {opt.label}\n                        </Select.Option>\n                    ))}\n                </Select>\n                break;\n            case \"checkbox\":\n                domEl =<Checkbox.Group\n                options={item.children}\n                onChange = {this[`${item.key}Change`]}\n              />\n\n              break;\n            case \"radio\":\n                domEl =<Radio.Group onChange = {this[`${item.key}Change`]}>\n                      {item.children.map((opt,index)=>(\n                        <Radio key = {index} value = {opt.value} >\n                            {opt.label}\n                        </Radio>\n                    ))} \n              </Radio.Group>\n              break;\n            case \"datePicker\":\n                    domEl = <DatePicker  onChange = {this[`${item.key}Change`]} locale={locale}  style={{ width: item.width }}\n                    format={item.format}/>;\n                    break;\n            case \"rangePickerTime\":\n                    domEl = <DatePicker.RangePicker  onChange = {this[`${item.key}Change`]} locale={locale} showTime={{ format: item.format }}\n                    format={item.format}/>;\n                    break;\n            default:\n                break;\n        }\n        let initialValue = item.initialValue?item.initialValue:\"\"\n        return getFieldDecorator(item.key,{initialValue: initialValue})(domEl)\n    }\n    /**\n     * 渲染搜索栏\n     *\n     * @returns ReactElement\n     * @memberof SearchForm\n     */\n    render(){\n        const {searchFormOption,layout,disabled} = this.props\n        return(\n            <div className=\"hd-searchForm-box\">\n               <Form layout ={layout}>\n                   {searchFormOption.forms&&searchFormOption.forms.map((item,index)=>{\n                       return(\n                           <FormItem label = {item.label} key = {item.key}>\n                               {this.renderFormDom(item)}\n                           </FormItem>\n                       )\n                   })}\n                   {searchFormOption.btns&&searchFormOption.btns.map((btn,index)=>{\n                          return(\n                            <FormItem key={index}>\n                                <Button\n                                    className={btn.className}\n                                    type={btn.type}\n                                    icon={btn.icon}\n                                    disabled={btn.disabled}\n                                    onClick={() => this.props[btn.handleClick](btn.key)}\n                                >\n                                {btn.label}\n                                </Button>\n                          </FormItem>\n                          )\n                      }) \n                   }\n                </Form> \n            </div>\n        )\n    }\n}\nconst SearchForm = Form.create()(HdTreeEdit);\nexport default SearchForm","import React,{Component} from 'react';\nimport SearchForm from '../../components/hd-searchForm'\nimport { CodePreviewer, MdPreviewer, PreviewLayout } from \"react-code-previewer\";\nimport installMd from '../md/hd-searchForm/intro.md'\nimport apiMd from '../md/hd-searchForm/api.md'\nimport example from '../md/hd-searchForm/example.md'\n\nconst searchFormOption = {\n    forms: [\n      {\n        label: \"输入框\",\n        type: \"input\",\n        key: \"simIP\",\n        width:180\n      },\n      {\n        label: \"下拉框\",\n        type: \"select\",\n        key: \"smStatus\",\n        width:180,\n        showSearch:true,\n        initialValue:'101',\n        children:[{\n          value:\"101\",\n          label:\"全部\"\n        },{\n          value:\"1\",\n          label:\"正常\"\n        },{\n          value:\"0\",\n          label:\"异常\"\n        }]\n      },\n      {\n        label: \"多选框\",\n        type: \"checkbox\",\n        key: \"smType\",\n        initialValue:['Apple1'],\n        children:[{ label: 'Apple', value: 'Apple1' },\n        { label: 'Pear', value: 'Pear1' },\n        { label: 'Orange', value: 'Orange1' },]\n      },      \n      {\n        label: \"单项选择\",\n        type: \"radio\",\n        key: \"11\",\n        initialValue:'Apple2',\n        children:[{ label: 'Apple', value: 'Apple2' },\n        { label: 'Pear', value: 'Pear2' },\n        { label: 'Orange', value: 'Orange2' },]\n      },\n      {\n        label: \"时间选择\",\n        type: \"datePicker\",\n        key: \"startTime\",\n        width:180,\n        format:'YYYY-MM-DD HH:mm' \n        },\n    ],\n    btns: [{\n        label: '查询',\n        handleClick: 'handleChange',\n        icon: 'search',\n        key:'search',\n        type: 'primary'\n      },{\n        label: '新增',\n        handleClick: 'handleAdd',\n        icon: 'plus',\n        key:'plus',\n        className: 'btn-custom-add',\n        type: 'primary'\n      }, {\n        label: '批量删除',\n        handleClick: 'handleDelete',\n        icon: 'delete',\n        key:'delete',\n        type: 'dashed',\n        disabled:false\n      }]\n  };\nclass HdSearchFormPage extends Component{\n    // 搜索框操作\n    handleChange = (val)=>{\n        const form = this.searchFormRef.props.form;\n        form.validateFields((err, values) => {\n            console.log(values)\n            if (err) {\n              return;\n            }\n        })\n    }\n    handleAdd = ()=>{\n\n    }\n    render(){\n        return <div>\n        <PreviewLayout>\n          <MdPreviewer md={installMd}></MdPreviewer>\n          <CodePreviewer code={example} showCode={true}>\n            <SearchForm \n              searchFormOption = {searchFormOption} \n              wrappedComponentRef = {form =>(this.searchFormRef = form)}\n              handleChange = {this.handleChange}\n              handleAdd = {this.handleAdd}\n              layout = \"inline\"\n            />\n          </CodePreviewer>\n          <MdPreviewer md={apiMd}></MdPreviewer>\n        </PreviewLayout>\n      </div>\n    }\n}\nexport default HdSearchFormPage","export default \"## **集成搜索框 按钮**\\n\\n配置搜索框条件，进行搜索；添加操作按钮\\n\\n## 何时使用\\n\\n项目需要统一的搜索框以及操作按钮\"","export default \"import React,{Component} from 'react';\\nimport SearchForm from '../../components/hd-searchForm'\\n\\nconst searchFormOption = {\\n    forms: [\\n      {\\n        label: \\\"输入框\\\",\\n        type: \\\"input\\\",\\n        key: \\\"simIP\\\",\\n        width:180\\n      },\\n      {\\n        label: \\\"下拉框\\\",\\n        type: \\\"select\\\",\\n        key: \\\"smStatus\\\",\\n        width:180,\\n        showSearch:true,\\n        initialValue:'101',\\n        children:[{\\n          value:\\\"101\\\",\\n          label:\\\"全部\\\"\\n        },{\\n          value:\\\"1\\\",\\n          label:\\\"正常\\\"\\n        },{\\n          value:\\\"0\\\",\\n          label:\\\"异常\\\"\\n        }]\\n      },\\n      {\\n        label: \\\"多选框\\\",\\n        type: \\\"checkbox\\\",\\n        key: \\\"smType\\\",\\n        initialValue:['Apple1'],\\n        children:[{ label: 'Apple', value: 'Apple1' },\\n        { label: 'Pear', value: 'Pear1' },\\n        { label: 'Orange', value: 'Orange1' },]\\n      },      \\n      {\\n        label: \\\"单项选择\\\",\\n        type: \\\"radio\\\",\\n        key: \\\"11\\\",\\n        initialValue:'Apple2',\\n        children:[{ label: 'Apple', value: 'Apple2' },\\n        { label: 'Pear', value: 'Pear2' },\\n        { label: 'Orange', value: 'Orange2' },]\\n      },\\n      {\\n        label: \\\"时间选择\\\",\\n        type: \\\"datePicker\\\",\\n        key: \\\"startTime\\\",\\n        width:180,\\n        format:'YYYY-MM-DD HH:mm' \\n        },\\n    ],\\n    btns: [{\\n        label: '查询',\\n        handleClick: 'handleChange',\\n        icon: 'search',\\n        key:'search',\\n        type: 'primary'\\n      },{\\n        label: '新增',\\n        handleClick: 'handleAdd',\\n        icon: 'plus',\\n        key:'plus',\\n        className: 'btn-custom-add',\\n        type: 'primary'\\n      },{\\n        label: '修改',\\n        handleClick: 'handleEdit',\\n        icon: 'edit',\\n        key:'edit',\\n        type: 'primary'\\n      }, {\\n        label: '批量删除',\\n        handleClick: 'handleDelete',\\n        icon: 'delete',\\n        key:'delete',\\n        type: 'dashed',\\n        disabled:false\\n      }]\\n  };\\nclass HdSearchFormPage extends Component{\\n    state = {\\n    }\\n    // 搜索框操作\\n    handleChange = (val)=>{\\n        const form = this.searchFormRef.props.form;\\n        form.validateFields((err, values) => {\\n            console.log(values)\\n            if (err) {\\n              return;\\n            }\\n        })\\n    }\\n    handleAdd = ()=>{\\n\\n    }\\n    render(){\\n        return\\n            <SearchForm \\n              searchFormOption = {searchFormOption} \\n              wrappedComponentRef = {form =>(this.searchFormRef = form)}\\n              handleChange = {this.handleChange}\\n              handleAdd = {this.handleAdd}\\n              layout = \\\"inline\\\"\\n            />\\n    }\\n}\\nexport default HdSearchFormPage\"","export default \"## API\\n## SearchForm\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|searchFormOption |定义对象| `对象` |-|-|\\n|wrappedComponentRef |ref引用| `ref引用` |-|-|\\n|handleChange|操作事件| btns的handleClick事件，` |-|-|\\n|layout |表单布局\\t| `horizontal|vertical|inline` |horizontal\\n\\n\\n## searchFormOption配置\\n\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|forms |各种类型输入框| `数组` |[]|-|\\n|btns |按钮| `数组` |[]|-|\\n\\n## searchFormOption配置forms\\n\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|label |文本| `string` ||-|\\n|type |输入框的类型| `input|select|checkbox|radio|datePicker|rangePickerTime|||` |string|-|\\n|key |key| `string` |string|-|\\n|width |宽度| `number` |number\\t|-|\\n|showSearch |使单选模式可搜索| `boolean` |false|-|\\n|initialValue |默认值| `string` |string|-|\\n|format |展示的时间格式\\t| `string` |HH:mm:ss|-|\\n|children |单选框，多选框，下拉框的子元素| `配置如父级` |[]|-|\\n\\n## searchFormOption配置btns\\n\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|label |文本| `string` ||-|\\n|type |ant按钮| `primary|dashed等` |string|-|\\n|key |key| `string` |string|-|\\n|icon |配置按钮的小图标| `string` |string|-|\\n|handleClick |操作事件| `数组` |function(value, event)|-|\\n|disabled |是否禁用状态，默认为 false| `Boolean` |false|-|\\n|className|配置按钮的样式|string|-|\\n\""],"sourceRoot":""}