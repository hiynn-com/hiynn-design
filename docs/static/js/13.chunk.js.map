{"version":3,"sources":["webpack://hiynn-design/./components/hgroup/index.js","webpack://hiynn-design/./components/hgroup/style/index.js","webpack://hiynn-design/./components/panel/index.js","webpack://hiynn-design/./components/vGroup/index.js","webpack://hiynn-design/./components/vGroup/style/index.js","webpack://hiynn-design/./src/pages/panel/PanelPage.js","webpack://hiynn-design/./src/pages/panel/md/intro.md","webpack://hiynn-design/./src/pages/panel/md/examples.md","webpack://hiynn-design/./src/pages/panel/md/example1.md","webpack://hiynn-design/./src/pages/panel/md/api.md"],"names":["sizeValidationFn","props","propName","componentName","val","test","Error","flexMapping","left","top","right","bottom","center","justify","between","HGroup","this","setCssVar","setState","dom","instance","attrObj","extraAttr","prop","style","setProperty","className","classNames","prefixCls","vAlign","hAlign","w","unitConvertor","h","String","includes","setAttributes","cls","setClassName","ref","e","children","Component","propTypes","PropTypes","oneOf","defaultProps","middle","hexValidationFn","Panel","width","height","wrapperStyle","titleStyle","contentStyle","sizeRst","getSize","titleHeight","titleCornerRadius","titleFont","borderRadius","titleBackground","color","background","fontSize","justifyContent","computeStyle","title","string","VGroup","HdPanelPage","padding","md","code","showCode","horizontal-align","text-align","title-fontsize","title-height","vertical-align","size","placeholder","type","title-background"],"mappings":"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","file":"static/js/13.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { style } from \"../context/style-context\";\n\n// 组件容器的类名，前面需加上前缀‘hd’\nconst cmpClsName = \"hgroup\";\n// 默认的高度height值\nconst defaultH = \"auto\";\n// 宽高的props输入验证函数\nconst sizeValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  if (val === defaultH) {\n    return;\n  }\n  const reg = /[0-9]+%?/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n};\n// 设置的对齐方式与flex布局的映射\nconst flexMapping = {\n  left: \"flex-start\",\n  top: \"flex-start\",\n  right: \"flex-end\",\n  bottom: \"flex-end\",\n  center: \"center\",\n  justify: \"space-around\",\n  between: \"space-between\"\n};\n\nexport default class HGroup extends Component {\n  // 类型检查\n  static propTypes = {\n    [\"vertical-align\"]: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\n    [\"horizontal-align\"]: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\", \"between\"]),\n    width: sizeValidationFn,\n    height: sizeValidationFn\n  };\n\n  // 类型检查\n  static propTypes = {\n    [\"vertical-align\"]: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\n    [\"horizontal-align\"]: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\", \"between\"]),\n    width: sizeValidationFn,\n    height: sizeValidationFn\n  };\n\n  // 默认props\n  static defaultProps = {\n    [\"vertical-align\"]: \"center\", // 垂直对齐\n    [\"horizontal-align\"]: \"justify\", // 水平对齐\n    width: \"100%\", // 宽度\n    height: \"auto\" // 高度\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * 组件挂载后，设置css变量，使得样式生效\n   */\n  componentDidMount() {\n    this.setCssVar();\n  }\n\n  /**\n   * 组件接收新的props后，更新组件，并重新设置css变量\n   */\n  UNSAFE_componentWillReceiveProps() {\n    this.setState({}, () => {\n      this.setCssVar();\n    });\n  }\n\n  /**\n   * 通过js设置css属性，使得css变量能够获取其中的值\n   */\n  setCssVar() {\n    const dom = this.instance;\n    const attrObj = this.extraAttr;\n    if (dom && attrObj) {\n      for (let prop in attrObj) {\n        dom.style.setProperty(prop, attrObj[prop]);\n      }\n    }\n  }\n\n  /**\n   * 获取类名\n   */\n  setClassName() {\n    const { className } = this.props;\n    let cls = classNames(`${style.prefixCls}-${cmpClsName}`, className);\n    return cls;\n  }\n\n  /**\n   * 通过props传递的内容，在react组件对象上保存extraAttr，然后将此对象的内容设置到dom对象的属性中\n   * @param {*} props\n   */\n  setAttributes(props) {\n    let vAlign = flexMapping[props[\"vertical-align\"]];\n    let hAlign = flexMapping[props[\"horizontal-align\"]];\n    let w = this.unitConvertor(props[\"width\"]);\n    let h = this.unitConvertor(props[\"height\"]);\n\n    this.extraAttr = {\n      [\"--width\"]: w,\n      [\"--height\"]: h,\n      [\"--vertical-align\"]: vAlign,\n      [\"--horizontal-align\"]: hAlign\n    };\n  }\n\n  /**\n   * 输入数字，则后面添加单位px，输入百分比则原样输出\n   * @param {*} val\n   */\n  unitConvertor(val) {\n    if (String(val).includes(\"%\")) {\n      return val;\n    } else {\n      return val + \"px\";\n    }\n  }\n\n  render() {\n    this.setAttributes(this.props);\n    const cls = this.setClassName();\n    return (\n      <div\n        className={cls}\n        ref={e => {\n          this.instance = e;\n        }}\n        {...this.props}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import \"../../styles/index.pcss\";\nimport \"./index.pcss\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { style } from \"../context/style-context\";\n\n// 组件容器的类名，前面需加上前缀‘hd’\nconst cmpClsName = \"panel\";\n\n// 默认的高度样式\nconst defaultH = \"auto\";\n\n// 标题栏字体对齐方式的映射\nconst flexMapping = {\n  left: \"flex-start\",\n  middle: \"center\",\n  right: \"flex-end\"\n};\n\n// 宽高的props输入验证函数\nconst sizeValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  if (val === defaultH) {\n    return;\n  }\n  const reg = /[0-9]+%?/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n};\n\n// 十六进制数输入的验证函数\nconst hexValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  if (val === \"not specified\") {\n    return;\n  }\n  const reg = /^#[0-9a-fA-F]{6}$/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n};\n\nexport default class Panel extends Component {\n  // 类型检查\n  static propTypes = {\n    width: sizeValidationFn, // panel宽度\n    height: sizeValidationFn, // panel高度\n    [\"corner-radius\"]: PropTypes.string, // 标题栏圆角\n    title: PropTypes.string, // 标题栏内容\n    [\"title-height\"]: sizeValidationFn, // 标题栏高度\n    [\"title-background\"]: hexValidationFn, // 标题栏背景色\n    [\"title-color\"]: hexValidationFn, // 标题栏字体颜色\n    [\"text-align\"]: PropTypes.oneOf([\"left\", \"middle\", \"right\"]), // 标题栏标题位置\n    [\"title-fontsize\"]: PropTypes.string, // 标题栏字体大小\n    background: hexValidationFn, // 内容区背景色\n    color: hexValidationFn // 内容区字体颜色\n  };\n\n  // 默认props\n  static defaultProps = {\n    width: \"400\", // 宽度\n    height: \"auto\", // 高度\n    [\"corner-radius\"]: \"5\", // 标题栏圆角\n    title: \"\", // 标题栏内容\n    [\"title-height\"]: \"30\", // 标题栏高度\n    [\"title-background\"]: \"#1890FF\", // 标题栏背景色\n    [\"title-color\"]: \"#ffffff\", // 标题栏字体颜色\n    [\"title-fontsize\"]: \"16\", // 标题栏字体大小\n    [\"text-align\"]: \"left\", // 标题栏字体对齐方式\n    background: \"not specified\", // 内容区背景色\n    color: \"#000000\" // 内容区字体颜色\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * 获取类名\n   */\n  setClassName() {\n    const { className } = this.props;\n    let cls = classNames(`${style.prefixCls}-${cmpClsName}`, className);\n    return cls;\n  }\n\n  /**\n   * 获取宽高、大小等的尺寸对象\n   */\n  getSize() {\n    return {\n      width: this.unitConvertor(this.props.width),\n      height: this.unitConvertor(this.props.height),\n      [\"title-height\"]: this.unitConvertor(this.props[\"title-height\"]),\n      [\"corner-radius\"]: this.unitConvertor(this.props[\"corner-radius\"]),\n      [\"title-fontsize\"]: this.unitConvertor(this.props[\"title-fontsize\"])\n    };\n  }\n\n  /**\n   * 输入数字，则后面添加单位px，输入百分比则原样输出\n   * @param {*} val\n   */\n  unitConvertor(val) {\n    if (String(val).includes(\"%\")) {\n      return val;\n    } else {\n      return val + \"px\";\n    }\n  }\n\n  computeStyle() {\n    let wrapperStyle = {},\n      titleStyle = {},\n      contentStyle = {};\n\n    // 设置宽高样式\n    const sizeRst = this.getSize();\n    const { width, height } = sizeRst;\n    const titleHeight = sizeRst[\"title-height\"];\n    const titleCornerRadius = sizeRst[\"corner-radius\"];\n    const titleFont = sizeRst[\"title-fontsize\"];\n    // 容器宽高\n    wrapperStyle = {\n      ...wrapperStyle,\n      width,\n      height,\n      borderRadius: `${titleCornerRadius} ${titleCornerRadius} 0 0`\n    };\n    // 标题栏宽高\n    titleStyle = {\n      ...titleStyle,\n      height: titleHeight\n    };\n\n    // 设置其他标题栏样式\n    const titleBackground = this.props[\"title-background\"];\n    const titleColor = this.props[\"title-color\"];\n    titleStyle = {\n      ...titleStyle,\n      color: titleColor,\n      background: titleBackground,\n      borderRadius: `${titleCornerRadius} ${titleCornerRadius} 0 0`,\n      fontSize: titleFont,\n      justifyContent: flexMapping[this.props[\"text-align\"]]\n    };\n\n    // 设置内容区其他样式\n    const background = this.props[\"background\"];\n    const color = this.props[\"color\"];\n    const contentHeight = `calc(${height} - ${titleHeight})`;\n    contentStyle = {\n      ...contentStyle,\n      background,\n      color,\n      height: contentHeight\n    };\n\n    return {\n      wrapperStyle,\n      titleStyle,\n      contentStyle\n    };\n  }\n\n  render() {\n    const cls = this.setClassName();\n    const { wrapperStyle, titleStyle, contentStyle } = this.computeStyle();\n\n    return (\n      <div className={cls} style={wrapperStyle} {...this.props}>\n        <div className={`${cls}-title`} style={titleStyle}>\n          {this.props.title}\n        </div>\n        <div className={`${cls}-content`} style={contentStyle}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { style } from \"../context/style-context\";\n\n// 组件容器的类名，前面需加上前缀‘hd’\nconst cmpClsName = 'vgroup';\n// 默认的高度height值\nconst defaultH = 'auto';\n// 宽高的props输入验证函数\nconst sizeValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  if (val === defaultH) {\n    return;\n  }\n  const reg = /[0-9]+%?/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n}\n// 设置的对齐方式与flex布局的映射\nconst flexMapping = {\n  left: 'flex-start',\n  top: 'flex-start',\n  right: 'flex-end',\n  bottom: 'flex-end',\n  center: 'center',\n  justify: 'space-around',\n  between: 'space-between',\n};\n\nexport default class VGroup extends Component {\n\n  // 类型检查\n  static propTypes = {\n    ['horizontal-align']: PropTypes.oneOf(['left', 'center', 'right']),\n    ['vertical-align']: PropTypes.oneOf(['top', 'center', 'bottom', 'justify', 'between']),\n    width: sizeValidationFn,\n    height: sizeValidationFn,\n  };\n\n  // 默认props\n  static defaultProps = {\n    ['vertical-align']: 'justify',          // 垂直对齐\n    ['horizontal-align']: 'center',         // 水平对齐\n    width: '100%',                          // 宽度\n    height: 'auto',                         // 高度\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * 组件挂载后，设置css变量，使得样式生效\n   */\n  componentDidMount() {\n    this.setCssVar();\n  }\n\n  /**\n   * 组件接收新的props后，更新组件，并重新设置css变量\n   */\n  UNSAFE_componentWillReceiveProps() {\n    this.setState({}, () => {\n      this.setCssVar();\n    });\n  }\n\n  /**\n   * 通过js设置css属性，使得css变量能够获取其中的值\n   */\n  setCssVar() {\n    const dom = this.instance;\n    const attrObj = this.extraAttr;\n    if (dom && attrObj) {\n      for (let prop in attrObj) {\n        dom.style.setProperty(prop, attrObj[prop]);\n      }\n    }\n  }\n\n  /**\n   * 获取类名\n   */\n  setClassName() {\n    const { className } = this.props;\n    let cls = classNames(`${style.prefixCls}-${cmpClsName}`, className);\n    return cls;\n  }\n\n  /**\n   * 通过props传递的内容，在react组件对象上保存extraAttr，然后将此对象的内容设置到dom对象的属性中\n   * @param {*} props \n   */\n  setAttributes(props) {\n    let vAlign = flexMapping[props['vertical-align']];\n    let hAlign = flexMapping[props['horizontal-align']];\n    let w = this.unitConvertor(props['width']);\n    let h = this.unitConvertor(props['height']);\n\n    this.extraAttr = {\n      ['--width']: w,\n      ['--height']: h,\n      ['--vertical-align']: vAlign,\n      ['--horizontal-align']: hAlign,\n    };\n  }\n\n  /**\n   * 输入数字，则后面添加单位px，输入百分比则原样输出\n   * @param {*} val \n   */\n  unitConvertor(val) {\n    if (String(val).includes('%')) {\n      return val;\n    } else {\n      return val + 'px';\n    }\n  }\n\n  render() {\n    this.setAttributes(this.props);\n    const cls = this.setClassName();\n    return (\n      <div className={cls}\n        ref={e => { this.instance = e }}\n        {...this.props}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}","import \"../../styles/index.pcss\";\nimport \"./index.pcss\";\n","import React, { Component } from \"react\";\nimport { Input, Button } from \"antd\";\nimport { PreviewLayout, CodePreviewer, MdPreviewer } from \"react-code-previewer\";\nimport Panel from \"../../../components/panel\";\nimport \"../../../components/panel/style/index\";\nimport HGroup from \"../../../components/hgroup\";\nimport \"../../../components/hgroup/style/index\";\nimport VGroup from \"../../../components/vGroup\";\nimport \"../../../components/vGroup/style/index\";\nimport introMd from \"./md/intro.md\";\nimport exampleMd from \"./md/examples.md\";\nimport example1 from \"./md/example1.md\";\nimport api from \"./md/api.md\";\n\nexport default class HdPanelPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const demo1 = `<HGroup horizontal-align='justify'>\n    <Panel width='450'\n      height='350'\n      title='我是标题栏'\n      text-align='left'\n      title-fontsize='16'\n      title-height='35'\n    >\n      <HGroup width='100%'\n        height='100%'\n        horizontal-align='center'\n        vertical-align='center'>\n        <VGroup width='80%'\n          height='100%'\n          vertical-align='justify'\n          horizontal-align='center'>\n          <HGroup>\n            <span>{'账  号'}</span>\n            <Input size=\"default\" placeholder=\"default size\" style={{ width: '250px' }} />\n          </HGroup>\n          <HGroup>\n            <span>{'密  码'}</span>\n            <Input size=\"default\" placeholder=\"default size\" style={{ width: '250px' }} />\n          </HGroup>\n          <HGroup>\n            <span>{'邮  箱'}</span>\n            <Input size=\"default\" placeholder=\"default size\" style={{ width: '250px' }} />\n          </HGroup>\n          <HGroup>\n            <span>{'网  址'}</span>\n            <Input size=\"default\" placeholder=\"default size\" style={{ width: '250px' }} />\n          </HGroup>\n          <HGroup horizontal-align='right'>\n            <Button type=\"primary\">Primary</Button>\n          </HGroup>\n        </VGroup>\n      </HGroup>\n    </Panel>\n\n    <Panel width='450'\n      height='350'\n      title='我是标题栏'\n      text-align='right'\n      title-fontsize='16'\n      title-background='#FF4D4F'\n      title-height='35'>\n      <HGroup horizontal-align='center'\n        vertical-align='center'\n        height='100%'>\n        This is another HGroup.\n      </HGroup>\n    </Panel>\n  </HGroup>`;\n\n    return (\n      <div style={{ padding: \"2em\" }}>\n        <PreviewLayout>\n          {/* 介绍 */}\n          <MdPreviewer md={introMd}></MdPreviewer>\n\n          {/* 示例说明 */}\n          <MdPreviewer md={exampleMd}></MdPreviewer>\n\n          {/* 示例 1 */}\n          <CodePreviewer code={demo1} showCode={true}>\n            <HGroup horizontal-align=\"justify\">\n              <Panel width=\"450\" height=\"350\" title=\"我是标题栏\" text-align=\"left\" title-fontsize=\"16\" title-height=\"35\">\n                <HGroup width=\"100%\" height=\"100%\" horizontal-align=\"center\" vertical-align=\"center\">\n                  <VGroup width=\"80%\" height=\"100%\" vertical-align=\"justify\" horizontal-align=\"center\">\n                    <HGroup>\n                      <span>{\"账  号\"}</span>\n                      <Input size=\"default\" placeholder=\"default size\" style={{ width: \"250px\" }} />\n                    </HGroup>\n                    <HGroup>\n                      <span>{\"密  码\"}</span>\n                      <Input size=\"default\" placeholder=\"default size\" style={{ width: \"250px\" }} />\n                    </HGroup>\n                    <HGroup>\n                      <span>{\"邮  箱\"}</span>\n                      <Input size=\"default\" placeholder=\"default size\" style={{ width: \"250px\" }} />\n                    </HGroup>\n                    <HGroup>\n                      <span>{\"网  址\"}</span>\n                      <Input size=\"default\" placeholder=\"default size\" style={{ width: \"250px\" }} />\n                    </HGroup>\n                    <HGroup horizontal-align=\"right\">\n                      <Button type=\"primary\">Primary</Button>\n                    </HGroup>\n                  </VGroup>\n                </HGroup>\n              </Panel>\n\n              <Panel width=\"450\" height=\"350\" title=\"我是标题栏\" text-align=\"right\" title-fontsize=\"16\" title-background=\"#FF4D4F\" title-height=\"35\">\n                <HGroup horizontal-align=\"center\" vertical-align=\"center\" height=\"100%\">\n                  This is another HGroup.\n                </HGroup>\n              </Panel>\n            </HGroup>\n          </CodePreviewer>\n          <MdPreviewer md={example1}></MdPreviewer>\n\n          {/* API说明 */}\n          <MdPreviewer md={api}></MdPreviewer>\n        </PreviewLayout>\n      </div>\n    );\n  }\n}\n","export default \"## **Panel 容器**\\n\\n自带标题栏的容器。\\n\\n## 何时使用\\n\\nPanel容器可以用在对某些信息进行分块展示的时候，作为该部分信息的容器使用。\"","export default \"## 代码演示\\n\\n下面通过代码演示Panel容器的使用方式。\"","export default \"Panel各属性的设置，以及通过HGroup、VGroup嵌套使用，对Panel内的元素进行布局。\"","export default \"\\n\\n## API\\n\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|width|容器宽度| `string. 数字型字符串，或者百分数` | `400` |-|\\n|height|容器高度| `string. 数字型字符串，或者百分数` | `auto` |-|\\n|corner-radius|标题栏的圆角| `string. 数字型字符串` | `5` |-|\\n|title|标题栏内容| `string` |空字符串|-|\\n|title-height|标题栏高度| `string. 数字型字符串` | `30` |-|\\n|titie-background|标题栏背景色| `string. 数字型字符串，#号开头的6位十六进制数` | `#1890FF` |-|\\n|title-color|标题栏内容的字体颜色| `string. 数字型字符串，#号开头的6位十六进制数` | `#ffffff` |-|\\n|title-fontsize|标题栏内容的字体大小| `string. 数字型字符串` | `16` ||\\n|text-align|标题栏文字的对齐方式| `Enum {'left', 'middle', 'right'}` |left|-|\\n|background|内容区背景色| `string. 数字型字符串，#号开头的6位十六进制数` | `not specified` |-|\\n|color|内容区字体颜色| `string. 数字型字符串，#号开头的6位十六进制数` | `#000000` |-|\\n\\n\""],"sourceRoot":""}