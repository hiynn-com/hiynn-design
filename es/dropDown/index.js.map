{"version":3,"sources":["../../components/dropDown/index.js"],"names":["React","Component","Option","HdDropDown","props","handleAddressData","da","data","length","setState","capitals","getCity","value","city","areaList","state","map","item","name","firstList","onChange","secondList","province","county","getSreaList","ci","getData","componentDidMount","handleChange","console","log","render","padding","width","marginRight","input","option","children","toLowerCase","indexOf","index"],"mappings":"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","sourcesContent":["import { Select } from \"antd\";\nimport React, { Component } from \"react\";\n\nconst { Option } = Select;\n\nclass HdDropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      capitals: [], // 省份\n      // city: [], // 市\n      // areaList: [] // 区\n      data: {\n        province: \"\",\n        city: \"\",\n        county: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleAddressData();\n    // console.log(\"传过来的值\", this.props.data);\n    this.setState({\n      capitals: this.props.data\n    });\n  }\n  handleAddressData = () => {\n    const da = this.props.data;\n    if (da && da.length > 0) {\n      this.setState(\n        {\n          capitals: da\n        },\n        () => {\n          // console.log(\"da\", da);\n        }\n      );\n    }\n  };\n  handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n  getCity = value => {\n    this.setState(\n      {\n        city: \"\",\n        areaList: \"\"\n      },\n      () => {\n        const { capitals } = this.state;\n        let da = [];\n        capitals.map(item => {\n          if (item.name === value) {\n            da = item.firstList;\n          }\n        });\n        this.setState(\n          {\n            city: da\n          },\n          () => {\n            // 点击城市获取默认的数据\n            // console.log(\"*******************\", value, this.state.city[0].name, this.state.city[0].secondList[0]);\n            this.props.onChange(value, this.state.city[0].name, this.state.city[0].secondList[0]);\n            this.setState({\n              areaList: this.state.city[0] ? this.state.city[0].secondList : \"\",\n              data: {\n                province: value,\n                city: this.state.city[0].name,\n                county: this.state.city[0].secondList[0]\n              }\n            });\n          }\n        );\n      }\n    );\n  };\n  getSreaList = value => {\n    this.setState(\n      {\n        areaList: \"\"\n      },\n      () => {\n        const { city } = this.state;\n        let ci = [];\n        city.map(item => {\n          if (item.name === value) {\n            ci = item.secondList;\n          }\n        });\n        this.setState(\n          {\n            areaList: ci\n          },\n          () => {\n            // console.log(\"**********市级************\", value, this.state.areaList[0]);\n            this.props.onChange(this.state.data.province, value, this.state.areaList[0]);\n            this.setState({\n              data: {\n                province: this.state.data.province,\n                city: value,\n                county: this.state.areaList[0]\n              }\n            });\n          }\n        );\n      }\n    );\n  };\n  getData = value => {\n    // console.log(`selected ${value}`);\n    this.props.onChange(this.state.data.province, this.state.data.city, value);\n    this.setState({\n      data: {\n        province: this.state.data.province,\n        city: this.state.data.city,\n        county: value\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className={\"dropdown\"} style={{ padding: \"20px\" }}>\n        <Select\n          showSearch\n          style={{ width: 128, marginRight: \"5px\" }}\n          placeholder=\"请选择\"\n          optionFilterProp=\"children\"\n          // defaultValue={this.state.capitals[0] ? this.state.capitals[0].name : \"\"}\n          onChange={this.getCity}\n          filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        >\n          {this.state.capitals.map((item, index) => {\n            return (\n              <Option key={index} value={item.name}>\n                {item.name}\n              </Option>\n            );\n          })}\n        </Select>\n        {typeof this.state.city !== \"undefined\" && this.state.city != [] ? (\n          <Select\n            showSearch\n            style={{ width: 128, marginRight: \"5px\" }}\n            placeholder=\"市\"\n            optionFilterProp=\"children\"\n            onChange={this.getSreaList}\n            defaultValue={this.state.city[0] ? this.state.city[0].name : \"\"}\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            {this.state.city.map((item, index) => {\n              return (\n                <Option key={index} value={item.name}>\n                  {item.name}\n                </Option>\n              );\n            })}\n          </Select>\n        ) : (\n          \"\"\n        )}\n        {this.state.areaList && this.state.areaList != [] ? (\n          <Select\n            showSearch\n            style={{ width: 128 }}\n            placeholder=\"区\"\n            optionFilterProp=\"children\"\n            defaultValue={this.state.areaList[0] ? this.state.areaList[0] : \"\"}\n            onChange={this.getData}\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            {this.state.areaList.map((item, index) => {\n              return (\n                <Option key={index} value={item}>\n                  {item}\n                </Option>\n              );\n            })}\n          </Select>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HdDropDown;\n"],"file":"index.js"}