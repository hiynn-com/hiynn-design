{"version":3,"sources":["../../components/formValidation/index.js"],"names":["React","Component","Option","HdFormValidation","props","handleSubmit","e","preventDefault","form","validateFields","err","values","Hdsubmit","state","render","getFieldDecorator","Hdbtn","Hdchange","Hddata","layout","data","map","item","index","label","span","labelCol","wrapperCol","key","rules","required","message","placeholder","pattern","reg","type","selectData","selItem","value","text","style","block","create","name","onValuesChange","changedValues","allValues"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\nimport React, { Component } from \"react\";\n\nconst { Option } = Select;\n\nclass HdFormValidation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.Hdsubmit(values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { Hdbtn, Hdchange, Hddata, Hdsubmit, layout, data } = this.props;\n\n    return (\n      <div>\n        <Form layout={layout} onSubmit={this.handleSubmit}>\n          {Hddata.map((item, index) => {\n            return (\n              <Form.Item key={index} label={item.label} labelCol={{ span: item.labelCol }} wrapperCol={{ span: item.wrapperCol }}>\n                {getFieldDecorator(`${item.key}`, {\n                  rules: [{ required: item.required, message: `${item.placeholder}` }, { pattern: item.reg, message: item.message }]\n                })(\n                  item.type == \"password\" ? (\n                    <Input.Password type={`${item.type}`} placeholder={item.placeholder} />\n                  ) : item.type == \"select\" ? (\n                    <Select placeholder=\"请选择\">\n                      {item.selectData.map((selItem, index) => {\n                        return (\n                          <Option key={index} value={selItem.value}>\n                            {selItem.text}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  ) : (\n                    <Input type={`${item.type}`} placeholder={item.placeholder} />\n                  )\n                )}\n              </Form.Item>\n            );\n          })}\n          {Hdbtn ? (\n            <Button style={{ ...Hdbtn.style }} block={Hdbtn.block} type={Hdbtn.type} htmlType=\"submit\">\n              {Hdbtn.text}\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nHdFormValidation = Form.create({\n  name: \"\",\n  onValuesChange(props, changedValues, allValues) {\n    props.Hdchange(allValues);\n  }\n})(HdFormValidation);\n\nexport default HdFormValidation;\n"],"file":"index.js"}