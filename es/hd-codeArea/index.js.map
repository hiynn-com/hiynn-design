{"version":3,"sources":["../../components/hd-codeArea/index.js"],"names":["React","Component","PropTypes","classNames","style","cmpClsName","sizeValidationFn","props","propName","componentName","val","reg","test","Error","CodeArea","onTextChange","e","event","window","target","value","length","showLineNum","lines","exec","onScroll","txtDom","scrollVal","scrollTop","pDOM","previousSibling","state","lineNums","num","numStr","i","setState","setClassName","className","cls","prefixCls","getSize","width","unitConvertor","height","String","includes","render","size","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { style } from \"../context/style-context\";\n\n// 组件容器的类名，前面需加上前缀‘hd’\nconst cmpClsName = \"codearea\";\n\n// 宽高的props输入验证函数\nconst sizeValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  const reg = /[0-9]+%?/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n};\n\nexport default class CodeArea extends Component {\n  // 类型检查\n  static propTypes = {\n    width: sizeValidationFn,\n    height: sizeValidationFn\n  };\n\n  // 默认props\n  static defaultProps = {\n    width: \"100%\", // 宽度\n    height: \"150\" // 高度\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineNums: \"\"\n    };\n  }\n\n  /**\n   *  文本框输入处理函数\n   *  此文本框用于显示代码，及行数。不允许自动换行，根据换行符 \\n 的个数来判断行数\n   */\n  onTextChange = e => {\n    const event = e || window.event;\n    const val = event.target.value;\n    // 若文本框内容为空，不显示行数\n    if (val.length === 0) {\n      this.showLineNum(0);\n    } else {\n      // 否则，默认行数为1，然后开始计算换行符个数\n      const reg = /\\n/g;\n      let lines = 1;\n      while (reg.exec(val)) {\n        lines = lines + 1;\n      }\n      this.showLineNum(lines);\n    }\n    // this.props.changeArea(val);\n  };\n\n  /**\n   * 更改代码行数显示列的内容，根据传来的行数，生成如1，2，4，5...此类的数列字符串，通过setState设置\n   * @param {*} num\n   */\n  showLineNum(num) {\n    let numStr = \"\";\n    for (var i = 1; i <= num; i++) {\n      numStr = numStr + i + \"\\n\";\n    }\n    this.setState({\n      ...this.state,\n      lineNums: numStr\n    });\n  }\n\n  /**\n   *  文本区域滚动条滚动的处理函数\n   *  此函数获取p元素，将文本域元素的scrollTop值赋给p元素，达到同步滚动的效果\n   */\n  onScroll = e => {\n    const event = e || window.event;\n    const txtDom = event.target;\n    const scrollVal = txtDom.scrollTop;\n    const pDOM = txtDom.previousSibling;\n    pDOM.scrollTop = scrollVal;\n  };\n\n  /**\n   * 获取类名\n   */\n  setClassName() {\n    const { className } = this.props;\n    let cls = classNames(`${style.prefixCls}-${cmpClsName}`, className);\n    return cls;\n  }\n\n  /**\n   * 获取宽高的对象\n   */\n  getSize() {\n    return {\n      width: this.unitConvertor(this.props.width),\n      height: this.unitConvertor(this.props.height)\n    };\n  }\n\n  /**\n   * 输入数字，则后面添加单位px，输入百分比则原样输出\n   * @param {*} val\n   */\n  unitConvertor(val) {\n    if (String(val).includes(\"%\")) {\n      return val;\n    } else {\n      return val + \"px\";\n    }\n  }\n\n  render() {\n    const size = this.getSize();\n    const cls = this.setClassName();\n\n    return (\n      <div className={cls} style={size}>\n        <p className={`${cls}-p`}>{this.state.lineNums}</p>\n\n        <textarea className={`${cls}-textarea`} onChange={this.onTextChange} onScroll={this.onScroll}></textarea>\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}