{"version":3,"sources":["webpack://hiynn-design/./components/hd-select/index.js","webpack://hiynn-design/./src/pages/select/Select.js","webpack://hiynn-design/./src/pages/select/md/index.md","webpack://hiynn-design/./src/pages/select/md/api.md"],"names":["Option","HdSelect","props","onChange","value","name","state","data","console","log","this","url","axios","get","then","response","setState","options","error","nextProps","size","loading","mode","style","defaultValue","placeholder","label","width","className","minWidth","map","item","index","key","Component","DropDownPage","code","md","showCode"],"mappings":"mqBAIQA,E,IAAAA,OAEFC,E,YACJ,WAAYC,GAAO,0BACjB,4BAAMA,KAqDRC,SAAW,SAAAC,GACT,EAAKF,MAAMC,SAAS,CAClBE,KAAM,QACND,MAAOA,KAvDT,EAAKE,MAAQ,CACXC,KAAM,EAAKL,MAAMK,MAHF,E,kEAOE,WACnBC,QAAQC,IAAIC,KAAKR,MAAMS,KACnBD,KAAKR,MAAMS,KACbC,IACGC,IAAIH,KAAKR,MAAMS,KACfG,KAAK,SAAAC,GACJ,EAAKC,SACH,CACET,KAAMQ,EAASR,KAAKA,KAAKU,SAE3B,gBAPN,MAYS,SAAAC,GACLV,QAAQC,IAAIS,O,gDAKMC,GAAW,WAC/BA,EAAUR,IACZC,IACGC,IAAIM,EAAUR,KACdG,KAAK,SAAAC,GACJ,EAAKC,SACH,CACET,KAAMQ,EAASR,KAAKA,KAAKU,SAE3B,gBAPN,MAYS,SAAAC,GACLV,QAAQC,IAAIS,KAGZC,EAAUZ,MACZG,KAAKM,SAAS,CACZT,KAAMY,EAAUZ,S,+BAaf,MAC4FG,KAAKR,MAAlGkB,EADC,EACDA,KAAMC,EADL,EACKA,QAA0BC,GAD/B,EACcnB,SADd,EACwBoB,MADxB,EAC+BD,MAAME,EADrC,EACqCA,aAAcC,EADnD,EACmDA,YAAaC,EADhE,EACgEA,MAAkBC,GADlF,EACuEpB,KADvE,EAC6EI,IAD7E,EACkFgB,OACzF,OACE,yBAAKC,UAAW,UACbF,EAAQ,0BAAME,UAAW,gBAAiBF,EAAlC,MAAoD,GAE3D,uBAAQD,YAAaA,EAAaD,aAAcA,EAAcF,KAAMA,EAAMF,KAAMA,EAAMC,QAASA,EAASlB,SAAUO,KAAKP,SAAUoB,MAAO,CAAEI,MAAOA,EAAOE,SAAU,MAC/JnB,KAAKJ,MAAMC,KACRG,KAAKJ,MAAMC,KAAKuB,IAAI,SAACC,EAAMC,GACzB,OACE,kBAAChC,EAAD,CAAQiC,IAAKD,EAAO5B,MAAO2B,EAAK3B,OAC7B2B,EAAK1B,QAIZ,S,GA7EO6B,aA+GRjC,O,4oCC5GMkC,E,YACnB,WAAYjC,GAAO,0BACjB,4BAAMA,KAkDRC,SAAW,SAAAC,GACTI,QAAQC,IAAI,eAAgBL,IAlD5B,EAAKE,MAAQ,CACXC,KAAM,CACJ,CACEF,KAAM,MACND,MAAO,GAET,CACEC,KAAM,MACND,MAAO,GAET,CACEC,KAAM,MACND,MAAO,IAGXgC,KAAM,84BAjBS,E,mGAwDjB,OACE,2BACE,uBAAaC,GCpEN,2KDqEP,uBAAeD,KAAM1B,KAAKJ,MAAM8B,KAAME,UAAU,GAC9C,kBAAC,IAAD,CAAUZ,MAAO,KAAMnB,KAAMG,KAAKJ,MAAMC,KAAMkB,YAAa,MAAOL,KAAM,QAASC,SAAS,EAAMlB,SAAUO,KAAKP,WAC/G,6BACA,kBAAC,IAAD,CACEuB,MAAO,KACPf,IAAK,0DACLJ,KAAMG,KAAKJ,MAAMC,KACjBkB,YAAa,MACbtB,SAAUO,KAAKP,SACfoB,MAAO,CAAEI,MAAO,KAChBA,MAAO,MAET,6BACA,kBAAC,IAAD,CAAUD,MAAO,KAAMnB,KAAMG,KAAKJ,MAAMC,KAAMkB,YAAa,MAAOH,KAAM,WAAYnB,SAAUO,KAAKP,YAErG,uBAAakC,GEpFN,giC,GFS2BH","file":"static/js/31.chunk.js","sourcesContent":["import { Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst { Option } = Select;\n\nclass HdSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.props.url);\n    if (this.props.url) {\n      axios\n        .get(this.props.url)\n        .then(response => {\n          this.setState(\n            {\n              data: response.data.data.options\n            },\n            () => {\n              // console.log(this.state.data);\n            }\n          );\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.url) {\n      axios\n        .get(nextProps.url)\n        .then(response => {\n          this.setState(\n            {\n              data: response.data.data.options\n            },\n            () => {\n              // console.log(this.state.data);\n            }\n          );\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      if (nextProps.data) {\n        this.setState({\n          data: nextProps.data\n        });\n      }\n    }\n  }\n\n  onChange = value => {\n    this.props.onChange({\n      name: \"value\",\n      value: value\n    });\n  };\n\n  render() {\n    let { size, loading, onChange, style, mode, defaultValue, placeholder, label, data, url, width } = this.props;\n    return (\n      <div className={\"select\"}>\n        {label ? <span className={\"select-label\"}>{label} :</span> : \"\"}\n        {\n          <Select placeholder={placeholder} defaultValue={defaultValue} mode={mode} size={size} loading={loading} onChange={this.onChange} style={{ width: width, minWidth: 120 }}>\n            {this.state.data\n              ? this.state.data.map((item, index) => {\n                  return (\n                    <Option key={index} value={item.value}>\n                      {item.name}\n                    </Option>\n                  );\n                })\n              : \"\"}\n          </Select>\n        }\n\n        {/* {url ? (\n          <Select placeholder={placeholder} defaultValue={defaultValue} mode={mode} size={size} loading={loading} onChange={onChange} style={style}>\n            {this.state.data\n              ? this.state.data.map((item, index) => {\n                  return (\n                    <Option key={index} value={item.value}>\n                      {item.name}\n                    </Option>\n                  );\n                })\n              : \"\"}\n          </Select>\n        ) : (\n          <Select placeholder={placeholder} defaultValue={defaultValue} mode={mode} size={size} loading={loading} onChange={onChange} style={style}>\n            {this.state.data\n              ? this.state.data.map((item, index) => {\n                  return (\n                    <Option key={index} value={item.value}>\n                      {item.name}\n                    </Option>\n                  );\n                })\n              : \"\"}\n          </Select>\n        )} */}\n      </div>\n    );\n  }\n}\n\nexport default HdSelect;\n","import React, { Component } from \"react\";\nimport HdSelect from \"../../../components/hd-select\";\nimport \"../../../components/hd-select/style\";\n\nimport { CodePreviewer, MdPreviewer, PreviewLayout } from \"react-code-previewer\";\nimport moment from \"moment\";\nimport IndexMD from \"./md/index.md\";\nimport ApiMD from \"./md/api.md\";\n\nexport default class DropDownPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          name: \"测试1\",\n          value: 1\n        },\n        {\n          name: \"测试2\",\n          value: 2\n        },\n        {\n          name: \"测试3\",\n          value: 3\n        }\n      ],\n      code: `\n      import { HdSelect } from 'hiynn-design';\n\n      this.state = {\n        data: [\n          {\n            name: \"测试1\",\n            value: 1\n          },\n          {\n            name: \"测试2\",\n            value: 2\n          },\n          {\n            name: \"测试3\",\n            value: 3\n          }\n        ]\n      }\n\n      onChange = value => {\n        console.log(\"select回调的数据：\", value);\n      };\n\n      <HdSelect label={\"加载\"} data={this.state.data} placeholder={\"请选择\"} size={\"small\"} loading={true} onChange={this.onChange} style={{ width: 120 }}></HdSelect>\n      <br />\n      <HdSelect label={\"单选\"} data={this.state.data} placeholder={\"请选择\"} onChange={this.onChange} style={{ width: 120 }}></HdSelect>\n      <br />\n      <HdSelect label={\"多选\"} data={this.state.data} placeholder={\"请选择\"} mode={\"multiple\"} onChange={this.onChange} style={{ width: 300 }}></HdSelect>\n      `\n    };\n  }\n\n  componentDidMount() {}\n  onChange = value => {\n    console.log(\"select回调的数据：\", value);\n  };\n\n  render() {\n    return (\n      <PreviewLayout>\n        <MdPreviewer md={IndexMD}></MdPreviewer>\n        <CodePreviewer code={this.state.code} showCode={true}>\n          <HdSelect label={\"加载\"} data={this.state.data} placeholder={\"请选择\"} size={\"small\"} loading={true} onChange={this.onChange}></HdSelect>\n          <br />\n          <HdSelect\n            label={\"单选\"}\n            url={\"http://10.0.91.189:19101/verse-service/ping/_api/select\"}\n            data={this.state.data}\n            placeholder={\"请选择\"}\n            onChange={this.onChange}\n            style={{ width: 120 }}\n            width={200}\n          ></HdSelect>\n          <br />\n          <HdSelect label={\"多选\"} data={this.state.data} placeholder={\"请选择\"} mode={\"multiple\"} onChange={this.onChange}></HdSelect>\n        </CodePreviewer>\n        <MdPreviewer md={ApiMD}></MdPreviewer>\n      </PreviewLayout>\n    );\n  }\n}\n","export default \"# HdSelect 组件\\n- 下拉选择器\\n\\n\\n#\\n\\n#\\n\\n## 何时使用\\n\\n- 弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。\\n- 当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。\\n\\n\\n\\n#\\n\\n#\\n\\n## 代码演示 :\\n\"","export default \"## Api :\\n\\n### HdSelect\\n\\n\\n\\n| 参数         | 说明                           | 类型            | 默认值   | 版本 |\\n| ------------ | ------------------------------ | --------------- | -------- | ---- |\\n| data         | 数据源                         | Array           | -        | ---- |\\n| url          | api                            | string          | -        | ---- |\\n| size         | 选择框大小，可选 large small   | string          | default  | ---- |\\n| loading      | 加载中状态                     | Boolean         | false    | ---- |\\n| width        | 自定宽度                       | number          | -        | ---- |\\n| mode         | 设置 Select 的模式为多选或标签 | \\\"multiple\\\"      | -        | ---- |\\n| defaultValue | 默认值                         | string          | string[] | ---- |\\n| placeholder  | placeholder                    | string          | -        | ---- |\\n| label        | select前文字信息               | string          | -        | ---- |\\n| onChange     | 监听                           | function(value) | -        | ---- |\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\""],"sourceRoot":""}