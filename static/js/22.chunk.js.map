{"version":3,"sources":["webpack://hiynn-design/./components/hd-radio/index.js","webpack://hiynn-design/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://hiynn-design/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://hiynn-design/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://hiynn-design/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://hiynn-design/./src/pages/radio/RadioPage.js","webpack://hiynn-design/./src/pages/radio/md/index.md","webpack://hiynn-design/./src/pages/radio/md/api.md"],"names":["returnName","HdRadio","props","options","fetchOptions","url","axios","get","then","res","data","code","setState","value","onChange","name","state","err","console","log","ev","target","length","undefined","this","nextProps","disabled","buttonStyle","Group","className","map","item","checked","Button","key","React","Component","module","exports","arr","Array","isArray","i","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","RadioPage","checkedItem","md","showCode","onClick","Math","random","Date","now"],"mappings":"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","file":"static/js/22.chunk.js","sourcesContent":["import {Radio} from 'antd';\nimport axios from 'axios';\nimport React from 'react';\n\nconst returnName = 'title';\n\nclass HdRadio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = (() => {\n      const options = this.props.options || [];\n      const value = options.length ? options[0].value : undefined;\n      return {options, value};\n    })();\n  }\n\n  componentWillMount() {\n    if (this.props.url) {\n      this.fetchOptions(this.props.url);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.url !== nextProps.url) {\n      this.fetchOptions(nextProps.url);\n    } else if (this.props.options !== nextProps.options) {\n      const options = nextProps.options || [];\n      const value = options.length ? options[0].value : undefined;\n      this.setState({options, value});\n    }\n  }\n\n  fetchOptions = url => {\n    axios.get(url).then(res => {\n      if (res.data.code != 200) return;\n      this.setState({\n        options: res.data.data.options,\n        value: res.data.data.options[0].value,\n      }, () => {\n        this.props.onChange && this.props.onChange({\n          name: returnName,\n          value: this.state.value,\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  onChange = ev => {\n    this.setState({\n      value: ev.target.value,\n    }, () => {\n      this.props.onChange && this.props.onChange({\n        name: returnName,\n        value: this.state.value,\n      });\n    });\n  };\n\n  render() {\n    const {\n      onChange,\n    } = this;\n\n    const {\n      disabled,\n      name,\n      buttonStyle,\n    } = this.props;\n\n    const {\n      options,\n      value,\n    } = this.state;\n\n    if (!options.length) return null;\n\n    return (\n      <Radio.Group\n        className=\"hd-radio-group\"\n        {...{\n          onChange,\n          disabled,\n          name,\n          buttonStyle,\n          value,\n        }}\n      >\n        {options.map(item => {\n          const {\n            checked,\n            value,\n            name,\n          } = item;\n          return <Radio.Button\n            key={value}\n            {...{\n              checked,\n              value,\n            }}\n          >{name}</Radio.Button>\n        })}\n      </Radio.Group>\n    )\n  }\n}\n\nexport default HdRadio;\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, {Component} from \"react\";\nimport {PreviewLayout, MdPreviewer, CodePreviewer} from \"react-code-previewer\";\nimport ApiMD from \"./md/api.md\";\nimport IndexMD from \"./md/index.md\";\nimport HdRadio from \"../../../components/hd-radio\";\nimport \"../../../components/hd-radio/style\";\n\nexport default class RadioPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: `import { HdRadio } from \"hiynn-design\";\n\nconst options = [\n  {name: '同比', value: '0'},\n  {name: '环比', value: '1'},\n];\n\nonChange = checkedItem => {\n  console.log(checkedItem);\n};\n\n<HdRadio options={this.state.options} buttonStyle=\"solid\"/>\n<HdRadio url={this.state.url} onChange={this.onChange}/>`,\n      options: [\n        {name: '同比', value: '0'},\n        {name: '环比', value: '1'},\n      ],\n      url: 'http://yapi.demo.qunar.com/mock/11526/getRadioOptions',\n    };\n  }\n\n  onChange = checkedItem => {\n    console.log(checkedItem);\n  };\n\n  render() {\n    return (\n      <PreviewLayout>\n        <MdPreviewer md={IndexMD}/>\n        <CodePreviewer code={this.state.code} showCode>\n          <HdRadio options={this.state.options} buttonStyle=\"solid\"/>\n          <br/><br/>\n          <button onClick={() => {\n            this.setState({\n              options: [...this.state.options, {name: `测试`, value: `${Math.random()}`}],\n            });\n          }}\n          >Change Options\n          </button>\n          <br/><br/>\n          <HdRadio url={this.state.url} onChange={this.onChange}/>\n          <br/><br/>\n          <button onClick={() => {\n            this.setState({\n              url: `${this.state.url}?t=${Date.now()}`,\n            });\n          }}\n          >Change Url\n          </button>\n        </CodePreviewer>\n        <MdPreviewer md={ApiMD}/>\n      </PreviewLayout>\n    )\n  }\n}\n","export default \"# HdRadio 单选框\\n- 单选框。\\n\\n\\n#\\n\\n#\\n\\n## 何时使用\\n\\n- 用于在多个备选项中选中单个状态（默认选中第一项）。\\n- 和 Select 的区别是，Radio 所有选项默认可见，方便用户在比较中选择，因此选项不宜过多。\\n\\n\\n\\n#\\n\\n#\\n\\n## 代码演示\\n\"","export default \"## API\\n\\n#### Radio\\n\\n| 属性 | 说明 | 类型 | 默认值 | 版本 |\\n| - | - | - | - | - |\\n| checked | 指定当前是否选中 | boolean | false | ---- |\\n| value | 根据 value 进行比较，判断是否选中 | any | - | ---- |\\n| name | 文本 | string | - | ---- |\\n\\n#### RadioGroup\\n##### 单选框组合，用于包裹一组 Radio。\\n\\n| 属性 | 说明 | 类型 | 默认值 | 版本 |\\n| - | - | - | - | - |\\n| disabled | 禁选所有子单选器 | boolean | false | ---- |\\n| name | RadioGroup 下所有 input\\\\[type=\\\"radio\\\"] 的 name 属性 | string | - | ---- |\\n| options | 以配置形式设置子元素（更新时不会触发 onChange 回调） | string[] \\\\| Array<{ name: string value: string disabled?: boolean }> | - | ---- |\\n| url | api（更新时会触发 onChange 回调） | string | - | ---- |\\n| onChange | 选项变化时的回调函数 | Function(checkedItem: { name: 'title', value: any }) | - | ---- |\\n| buttonStyle | RadioButton 的风格样式，目前有描边和填色两种风格 | outline \\\\| solid | outline | ---- |\\n\""],"sourceRoot":""}