{"version":3,"sources":["webpack://hiynn-design/./components/hgroup/index.js","webpack://hiynn-design/./components/hgroup/style/index.js","webpack://hiynn-design/./src/pages/hgroup/HGroupPage.js","webpack://hiynn-design/./src/pages/hgroup/md/intro.md","webpack://hiynn-design/./src/pages/hgroup/md/examples.md","webpack://hiynn-design/./src/pages/hgroup/md/example1.md","webpack://hiynn-design/./src/pages/hgroup/md/example2.md","webpack://hiynn-design/./src/pages/hgroup/md/api.md"],"names":["sizeValidationFn","props","propName","componentName","val","test","Error","flexMapping","left","top","right","bottom","center","justify","between","HGroup","this","setCssVar","setState","dom","instance","attrObj","extraAttr","prop","style","setProperty","className","classNames","prefixCls","vAlign","hAlign","w","unitConvertor","h","String","includes","setAttributes","cls","setClassName","ref","e","children","Component","propTypes","PropTypes","oneOf","defaultProps","HdHGroupPage","padding","md","code","showCode","background","key","placeholder","width","height","horizontal-align","vertical-align"],"mappings":"o1BAUMA,EAAmB,SAACC,EAAOC,EAAUC,GACzC,IAAMC,EAAMH,EAAMC,GAClB,GAJe,SAIXE,EAAJ,CAIA,MADY,YACHC,KAAKD,QAAd,EACS,IAAIE,MAAJ,cAAiBH,EAAjB,cAAoCD,EAApC,iBAILK,EAAc,CAClBC,KAAM,aACNC,IAAK,aACLC,MAAO,WACPC,OAAQ,WACRC,OAAQ,SACRC,QAAS,eACTC,QAAS,iBAGUC,E,YAyBnB,WAAYd,GAAO,6CACXA,I,iEAONe,KAAKC,c,yDAM4B,WACjCD,KAAKE,SAAS,GAAI,WAChB,EAAKD,gB,kCAQP,IAAME,EAAMH,KAAKI,SACXC,EAAUL,KAAKM,UACrB,GAAIH,GAAOE,EACT,IAAK,IAAIE,KAAQF,EACfF,EAAIK,MAAMC,YAAYF,EAAMF,EAAQE,M,qCAQ3B,IACLG,EAAcV,KAAKf,MAAnByB,UAER,OADUC,IAAW,GAAD,OAAIH,IAAMI,UAAV,YAxFL,UAwF0CF,K,oCAQ7CzB,GAAO,MACf4B,EAAStB,EAAYN,EAAM,mBAC3B6B,EAASvB,EAAYN,EAAM,qBAC3B8B,EAAIf,KAAKgB,cAAc/B,EAAK,OAC5BgC,EAAIjB,KAAKgB,cAAc/B,EAAK,QAEhCe,KAAKM,WAAL,WACG,UAAYS,GADf,MAEG,WAAaE,GAFhB,MAGG,mBAAqBJ,GAHxB,MAIG,qBAAuBC,GAJ1B,K,oCAYY1B,GACZ,OAAI8B,OAAO9B,GAAK+B,SAAS,KAChB/B,EAEAA,EAAM,O,+BAIR,WACPY,KAAKoB,cAAcpB,KAAKf,OACxB,IAAMoC,EAAMrB,KAAKsB,eACjB,OACE,6BACEZ,UAAWW,EACXE,IAAK,SAAAC,GACH,EAAKpB,SAAWoB,IAEdxB,KAAKf,OAERe,KAAKf,MAAMwC,c,GA5GgBC,aAAf3B,EAEZ4B,W,WACJ,iBAAmBC,IAAUC,MAAM,CAAC,MAAO,SAAU,Y,MACrD,mBAAqBD,IAAUC,MAAM,CAAC,OAAQ,SAAU,QAAS,UAAW,a,cACtE7C,G,eACCA,G,GANSe,EAUZ4B,W,WACJ,iBAAmBC,IAAUC,MAAM,CAAC,MAAO,SAAU,Y,MACrD,mBAAqBD,IAAUC,MAAM,CAAC,OAAQ,SAAU,QAAS,UAAW,a,cACtE7C,G,eACCA,G,GAdSe,EAkBZ+B,c,WACJ,iBAAmB,U,MACnB,mBAAqB,W,cACf,Q,eACC,Q,sECrDZ,+E,0pCCYqBC,E,YACnB,WAAY9C,GAAO,6CACXA,I,mGAyBN,OACE,yBAAKuB,MAAO,CAAEwB,QAAS,QACrB,2BAEE,uBAAaC,GC3CR,yID8CL,uBAAaA,GE9CR,sCFiDL,uBAAeC,KA7BP,8SA6BoBC,UAAU,GACpC,kBAAC,IAAD,CAAQ3B,MAAO,CAAE4B,WAAY,WAAaC,IAAK,GAC7C,yBAAK7B,MAAO,CAAE4B,WAAY,YAA1B,aACA,uBAAG5B,MAAO,CAAE4B,WAAY,YAAxB,eACA,uBAAOE,YAAY,aAAa9B,MAAO,CAAE+B,MAAO,WAChD,0BAAM/B,MAAO,CAAE4B,WAAY,YAA3B,kBAGJ,uBAAaH,GGzDR,qCH4DL,uBAAeC,KAjCP,yUAiCoBC,UAAU,GACpC,kBAAC,IAAD,CAAQI,MAAM,MAAMC,OAAO,MAAMC,mBAAiB,QAAQC,iBAAe,MAAMlC,MAAO,CAAE4B,WAAY,WAAaC,IAAK,GACpH,yBAAK7B,MAAO,CAAE4B,WAAY,YAA1B,aACA,uBAAG5B,MAAO,CAAE4B,WAAY,YAAxB,eACA,0BAAM5B,MAAO,CAAE4B,WAAY,YAA3B,kBAGJ,uBAAaH,GInER,8GJsEL,uBAAaA,GKtER,uV,GLY2BP","file":"static/js/25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { style } from \"../context/style-context\";\n\n// 组件容器的类名，前面需加上前缀‘hd’\nconst cmpClsName = \"hgroup\";\n// 默认的高度height值\nconst defaultH = \"auto\";\n// 宽高的props输入验证函数\nconst sizeValidationFn = (props, propName, componentName) => {\n  const val = props[propName];\n  if (val === defaultH) {\n    return;\n  }\n  const reg = /[0-9]+%?/g;\n  if (!reg.test(val)) {\n    return new Error(`传给组件${componentName}的属性${propName}的值不合法，校验失败`);\n  }\n};\n// 设置的对齐方式与flex布局的映射\nconst flexMapping = {\n  left: \"flex-start\",\n  top: \"flex-start\",\n  right: \"flex-end\",\n  bottom: \"flex-end\",\n  center: \"center\",\n  justify: \"space-around\",\n  between: \"space-between\"\n};\n\nexport default class HGroup extends Component {\n  // 类型检查\n  static propTypes = {\n    [\"vertical-align\"]: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\n    [\"horizontal-align\"]: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\", \"between\"]),\n    width: sizeValidationFn,\n    height: sizeValidationFn\n  };\n\n  // 类型检查\n  static propTypes = {\n    [\"vertical-align\"]: PropTypes.oneOf([\"top\", \"center\", \"bottom\"]),\n    [\"horizontal-align\"]: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\", \"between\"]),\n    width: sizeValidationFn,\n    height: sizeValidationFn\n  };\n\n  // 默认props\n  static defaultProps = {\n    [\"vertical-align\"]: \"center\", // 垂直对齐\n    [\"horizontal-align\"]: \"justify\", // 水平对齐\n    width: \"100%\", // 宽度\n    height: \"auto\" // 高度\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * 组件挂载后，设置css变量，使得样式生效\n   */\n  componentDidMount() {\n    this.setCssVar();\n  }\n\n  /**\n   * 组件接收新的props后，更新组件，并重新设置css变量\n   */\n  UNSAFE_componentWillReceiveProps() {\n    this.setState({}, () => {\n      this.setCssVar();\n    });\n  }\n\n  /**\n   * 通过js设置css属性，使得css变量能够获取其中的值\n   */\n  setCssVar() {\n    const dom = this.instance;\n    const attrObj = this.extraAttr;\n    if (dom && attrObj) {\n      for (let prop in attrObj) {\n        dom.style.setProperty(prop, attrObj[prop]);\n      }\n    }\n  }\n\n  /**\n   * 获取类名\n   */\n  setClassName() {\n    const { className } = this.props;\n    let cls = classNames(`${style.prefixCls}-${cmpClsName}`, className);\n    return cls;\n  }\n\n  /**\n   * 通过props传递的内容，在react组件对象上保存extraAttr，然后将此对象的内容设置到dom对象的属性中\n   * @param {*} props\n   */\n  setAttributes(props) {\n    let vAlign = flexMapping[props[\"vertical-align\"]];\n    let hAlign = flexMapping[props[\"horizontal-align\"]];\n    let w = this.unitConvertor(props[\"width\"]);\n    let h = this.unitConvertor(props[\"height\"]);\n\n    this.extraAttr = {\n      [\"--width\"]: w,\n      [\"--height\"]: h,\n      [\"--vertical-align\"]: vAlign,\n      [\"--horizontal-align\"]: hAlign\n    };\n  }\n\n  /**\n   * 输入数字，则后面添加单位px，输入百分比则原样输出\n   * @param {*} val\n   */\n  unitConvertor(val) {\n    if (String(val).includes(\"%\")) {\n      return val;\n    } else {\n      return val + \"px\";\n    }\n  }\n\n  render() {\n    this.setAttributes(this.props);\n    const cls = this.setClassName();\n    return (\n      <div\n        className={cls}\n        ref={e => {\n          this.instance = e;\n        }}\n        {...this.props}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import \"../../styles/index.pcss\";\nimport \"./index.pcss\";\n","import React, { Component } from \"react\";\nimport { Input } from \"antd\";\nimport HGroup from \"../../../components/hgroup\";\nimport \"../../../components/hgroup/style/index\";\nimport { PreviewLayout, CodePreviewer, MdPreviewer } from \"react-code-previewer\";\n\nimport introMd from \"./md/intro.md\";\nimport exampleMd from \"./md/examples.md\";\nimport example1 from \"./md/example1.md\";\nimport example2 from \"./md/example2.md\";\nimport api from \"./md/api.md\";\n\nexport default class HdHGroupPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const demo1 = `<HGroup style={{ background: 'lightblue' }} key={1}>\n  <div style={{background: '#FFBB55'}}>i'm a div</div>\n  <p style={{background: '#99BB33'}}>this is a p</p>\n  <Input placeholder=\"small size\" style={{width: '200px'}} />\n  <span style={{background: '#FF4444'}}>span span...</span>\n</HGroup>`;\n\n    const demo2 = `<HGroup width='900'\n  height='200'\n  horizontal-align='right'\n  vertical-align='top'\n  style={{ background: '#108EE9' }}\n  key={2}\n>\n  <div style={{ background: '#FFBB55' }}>i'm a div</div>\n  <p style={{ background: '#99BB33' }}>this is a p</p>\n  <span style={{ background: '#FF4444' }}>span span...</span>\n</HGroup>`;\n\n    return (\n      <div style={{ padding: \"2em\" }}>\n        <PreviewLayout>\n          {/* 介绍 */}\n          <MdPreviewer md={introMd}></MdPreviewer>\n\n          {/* 示例说明 */}\n          <MdPreviewer md={exampleMd}></MdPreviewer>\n\n          {/* 示例 1 */}\n          <CodePreviewer code={demo1} showCode={true}>\n            <HGroup style={{ background: \"#108EE9\" }} key={1}>\n              <div style={{ background: \"#FFBB55\" }}>i'm a div</div>\n              <p style={{ background: \"#99BB33\" }}>this is a p</p>\n              <Input placeholder=\"small size\" style={{ width: \"200px\" }} />\n              <span style={{ background: \"#FF4444\" }}>span span...</span>\n            </HGroup>\n          </CodePreviewer>\n          <MdPreviewer md={example1}></MdPreviewer>\n\n          {/* 示例 2 */}\n          <CodePreviewer code={demo2} showCode={true}>\n            <HGroup width=\"900\" height=\"200\" horizontal-align=\"right\" vertical-align=\"top\" style={{ background: \"#108EE9\" }} key={2}>\n              <div style={{ background: \"#FFBB55\" }}>i'm a div</div>\n              <p style={{ background: \"#99BB33\" }}>this is a p</p>\n              <span style={{ background: \"#FF4444\" }}>span span...</span>\n            </HGroup>\n          </CodePreviewer>\n          <MdPreviewer md={example2}></MdPreviewer>\n\n          {/* API说明 */}\n          <MdPreviewer md={api}></MdPreviewer>\n        </PreviewLayout>\n      </div>\n    );\n  }\n}\n","export default \"## **HGroup 容器**\\n\\n自带水平布局的容器。\\n\\n## 何时使用\\n\\n在构建一个网页的布局结构时，有大量需要多个元素水平、垂直对齐排列的地方。一般此类需求通过css设置弹性布局实现。HGroup容器提供了子元素水平排列对齐的功能，可以嵌套使用。\"","export default \"## 代码演示\\n\\n下面通过代码演示HGroup容器的使用方式。\"","export default \"未设置任何属性时，HGroup的所有子元素默认在同一行分散排列。\"","export default \"可以通过设置width、height、vertical-align和horizontal-align属性，分别改变HGroup容器的宽高和子元素在水平、竖直方向上的对齐方式。属性值的类型及范围见下方API部分。\"","export default \"\\n\\n## API\\n\\n|参数|说明|类型|默认值|版本|\\n|:--|:--|:--|:--|:--|\\n|width|容器宽度| `string. 数字型字符串，或者百分数` |100%|-|\\n|height|容器高度| `string. 数字型字符串，或者百分数` |auto|-|\\n|horizontal-align|容器内子元素的水平对齐方式| `Enum {'left', 'center', 'right', 'justify', 'between'}` |justify|-|\\n|vertical-align|容器内子元素的垂直对齐方式| `Enum {'top', 'center', 'bottom'}` |center|-|\\n\\n\""],"sourceRoot":""}