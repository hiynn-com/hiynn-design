{"version":3,"sources":["webpack://hiynn-design/./components/radio/index.js","webpack://hiynn-design/./src/pages/radio/RadioPage.js","webpack://hiynn-design/./src/pages/radio/md/index.md","webpack://hiynn-design/./src/pages/radio/md/api.md"],"names":["HdRadio","this","props","defaultValue","disabled","name","options","onChange","buttonStyle","Group","className","map","item","checked","value","label","Button","key","React","Component","options1","options2","RadioPage","state","code","md","showCode"],"mappings":"8qBAGMA,E,yIACK,MAQHC,KAAKC,MANPC,EAFK,EAELA,aACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,KACAC,EALK,EAKLA,QACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,YAGF,OACE,sBAAOC,MAAP,KACEC,UAAU,kBACN,CACFP,eACAC,WACAC,OACAE,WACAC,gBAGDF,EAAQK,IAAI,SAAAC,GAAQ,IAEjBC,EAGED,EAHFC,QACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,MAEF,OAAO,sBAAOC,OAAP,KACLC,IAAKH,GACD,CACFD,UACAC,UAEFC,U,GAlCUG,IAAMC,WAyCbnB,O,ylCCrCf,IAAMoB,EAAW,CACf,CAACL,MAAO,KAAMD,MAAO,KACrB,CAACC,MAAO,KAAMD,MAAO,MAGjBO,EAAW,CACf,CAACN,MAAO,MAAOD,MAAO,KACtB,CAACC,MAAO,MAAOD,MAAO,MAGHQ,E,YACnB,WAAYpB,GAAO,0BACjB,4BAAMA,KACDqB,MAAQ,CACXC,KAAM,uVAHS,E,sDAqBjB,OACE,2BACE,uBAAaC,GCzCN,uJD0CP,uBAAeD,KAAMvB,KAAKsB,MAAMC,KAAME,UAAQ,GAC5C,kBAAC,IAAD,CAASpB,QAASc,EAAUjB,aAAa,IAAIK,YAAY,UACzD,6BAAK,6BACL,kBAAC,IAAD,CAASF,QAASe,EAAUlB,aAAa,OAE3C,uBAAasB,GE/CN,8uB,GFiBwBN","file":"static/js/28.chunk.js","sourcesContent":["import {Radio} from 'antd';\nimport React from 'react';\n\nclass HdRadio extends React.Component {\n  render() {\n    const {\n      defaultValue,\n      disabled,\n      name,\n      options,\n      onChange,\n      buttonStyle,\n    } = this.props;\n\n    return (\n      <Radio.Group\n        className=\"hd-radio-group\"\n        {...{\n          defaultValue,\n          disabled,\n          name,\n          onChange,\n          buttonStyle,\n        }}\n      >\n        {options.map(item => {\n          const {\n            checked,\n            value,\n            label,\n          } = item;\n          return <Radio.Button\n            key={value}\n            {...{\n              checked,\n              value,\n            }}\n          >{label}</Radio.Button>\n        })}\n      </Radio.Group>\n    )\n  }\n}\n\nexport default HdRadio;\n","import React, {Component} from \"react\";\nimport {PreviewLayout, MdPreviewer, CodePreviewer} from \"react-code-previewer\";\nimport ApiMD from \"./md/api.md\";\nimport IndexMD from \"./md/index.md\";\nimport HdRadio from \"../../../components/radio\";\nimport \"../../../components/radio/style\";\n\nconst options1 = [\n  {label: '同比', value: '0'},\n  {label: '环比', value: '1'},\n];\n\nconst options2 = [\n  {label: '第四次', value: '2'},\n  {label: '第五次', value: '3'},\n];\n\nexport default class RadioPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: `import { HdRadio } from \"hiynn-design\";\n\nconst options1 = [\n  {label: '同比', value: '0'},\n  {label: '环比', value: '1'},\n];\n\nconst options2 = [\n  {label: '第四次', value: '2'},\n  {label: '第五次', value: '3'},\n];\n\n<HdRadio options={options1} defaultValue=\"0\" buttonStyle=\"solid\"/>\n<HdRadio options={options2} defaultValue=\"2\"/>`\n    };\n  }\n\n  render() {\n    return (\n      <PreviewLayout>\n        <MdPreviewer md={IndexMD}/>\n        <CodePreviewer code={this.state.code} showCode>\n          <HdRadio options={options1} defaultValue=\"0\" buttonStyle=\"solid\"/>\n          <br/><br/>\n          <HdRadio options={options2} defaultValue=\"2\"/>\n        </CodePreviewer>\n        <MdPreviewer md={ApiMD}/>\n      </PreviewLayout>\n    )\n  }\n}\n","export default \"# HdRadio 单选框\\n- 单选框。\\n\\n\\n#\\n\\n#\\n\\n## 何时使用\\n\\n- 用于在多个备选项中选中单个状态。\\n- 和 Select 的区别是，Radio 所有选项默认可见，方便用户在比较中选择，因此选项不宜过多。\\n\\n\\n\\n#\\n\\n#\\n\\n## 代码演示\\n\"","export default \"## API\\n\\n#### Radio\\n\\n| 属性 | 说明 | 类型 | 默认值 | 版本 |\\n| - | - | - | - | - |\\n| checked | 指定当前是否选中 | boolean | false | ---- |\\n| value | 根据 value 进行比较，判断是否选中 | any | - | ---- |\\n| label | 文本 | string | - | ---- |\\n\\n#### RadioGroup\\n##### 单选框组合，用于包裹一组 Radio。\\n\\n| 属性 | 说明 | 类型 | 默认值 | 版本 |\\n| - | - | - | - | - |\\n| defaultValue | 默认选中的值 | any | - | ---- |\\n| disabled | 禁选所有子单选器 | boolean | false | ---- |\\n| name | RadioGroup 下所有 input\\\\[type=\\\"radio\\\"] 的 name 属性 | string | - | ---- |\\n| options | 以配置形式设置子元素 | string[] \\\\| Array<{ label: string value: string disabled?: boolean }> | - | ---- |\\n| onChange | 选项变化时的回调函数 | Function(e:Event) | - | ---- |\\n| buttonStyle | RadioButton 的风格样式，目前有描边和填色两种风格 | outline \\\\| solid | outline | ---- |\\n\""],"sourceRoot":""}