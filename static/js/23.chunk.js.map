{"version":3,"sources":["webpack://hiynn-design/./components/button/index.js","webpack://hiynn-design/./src/pages/button/ButtonPage.js","webpack://hiynn-design/./src/pages/button/md/index.md","webpack://hiynn-design/./src/pages/button/md/api.md"],"names":["HdButton","autoInsertSpaceInButton","className","type","this","props","title","React","Component","ButtonPage","state","code","md","showCode"],"mappings":"syBAMMA,E,yIAEF,OACE,uBAAgBC,yBAAyB,GACvC,2BAAQC,UAAU,YAAYC,KAAK,WAAcC,KAAKC,OAAQD,KAAKC,MAAMC,Y,GAJ1DC,IAAMC,WAUdR,O,6qCCTMS,E,YACnB,WAAYJ,GAAO,0BACjB,4BAAMA,KACDK,MAAQ,CACXC,KAAM,8FAHS,E,sDAWjB,OACE,2BACE,uBAAaC,GCrBN,+HDsBP,uBAAeD,KAAMP,KAAKM,MAAMC,KAAME,UAAQ,GAC5C,kBAAC,IAAD,CAAUP,MAAM,OAChB,kBAAC,IAAD,CAAUA,MAAM,QAElB,uBAAaM,GE1BN,4nB,GFOyBJ","file":"static/js/23.chunk.js","sourcesContent":["import {\n  Button,\n  ConfigProvider,\n} from 'antd';\nimport React from 'react';\n\nclass HdButton extends React.Component {\n  render() {\n    return (\n      <ConfigProvider autoInsertSpaceInButton={false}>\n        <Button className=\"hd-button\" type=\"primary\" {...this.props}>{this.props.title}</Button>\n      </ConfigProvider>\n    )\n  }\n}\n\nexport default HdButton;\n","import React, {Component} from \"react\";\nimport {PreviewLayout, MdPreviewer, CodePreviewer} from \"react-code-previewer\";\nimport ApiMD from \"./md/api.md\";\nimport IndexMD from \"./md/index.md\";\nimport HdButton from \"../../../components/button\";\nimport \"../../../components/button/style\";\n\nexport default class ButtonPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: `import { HdButton } from \"hiynn-design\";\n\n<HdButton title=\"明细\"/>\n<HdButton title=\"导出\"/>`\n    };\n  }\n\n  render() {\n    return (\n      <PreviewLayout>\n        <MdPreviewer md={IndexMD}/>\n        <CodePreviewer code={this.state.code} showCode>\n          <HdButton title=\"明细\"/>\n          <HdButton title=\"导出\"/>\n        </CodePreviewer>\n        <MdPreviewer md={ApiMD}/>\n      </PreviewLayout>\n    )\n  }\n}\n","export default \"# HdButton 按钮\\n- 按钮用于开始一个即时操作。\\n\\n\\n#\\n\\n#\\n\\n## 何时使用\\n\\n- 标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑。\\n\\n\\n\\n#\\n\\n#\\n\\n## 代码演示\\n\"","export default \"## API\\n\\n#### 按钮的属性说明如下：\\n\\n| 属性 | 说明 | 类型 | 默认值 | 版本 |\\n| - | - | - | - | - |\\n| title | 按钮文字 | string | - | ---- |\\n| disabled | 按钮失效状态 | boolean | false | ---- |\\n| href | 点击跳转的地址，指定此属性 button 的行为和 a 链接一致 | string | - | ---- |\\n| htmlType | 设置 button 原生的 type 值，可选值请参考 HTML 标准 | string | button | ---- |\\n| icon | 设置按钮的图标类型 | string | - | ---- |\\n| loading | 设置按钮载入状态 | boolean \\\\| { delay: number } | false | ---- |\\n| target | 相当于 a 链接的 target 属性，href 存在时生效 | string | - | ---- |\\n| type | 设置按钮类型，可选值为 primary dashed danger link(3.17 中增加) 或者不设 | string | - | ---- |\\n| onClick | 点击按钮时的回调 | (event) => void | - | ---- |\\n\""],"sourceRoot":""}