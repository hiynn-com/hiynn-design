(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"./src/pages/formValidation/HdFormValidationPages.js":function(e,n,t){"use strict";t.r(n);t("./node_modules/react-code-previewer/es/preview-layout/style/css.js");var a=t("./node_modules/react-code-previewer/es/preview-layout/index.js"),r=(t("./node_modules/react-code-previewer/es/code-previewer/style/css.js"),t("./node_modules/react-code-previewer/es/code-previewer/index.js")),s=(t("./node_modules/react-code-previewer/es/md-previewer/style/css.js"),t("./node_modules/react-code-previewer/es/md-previewer/index.js")),l=t("./node_modules/@babel/runtime/helpers/classCallCheck.js"),o=t.n(l),d=t("./node_modules/@babel/runtime/helpers/createClass.js"),i=t.n(d),p=t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"),c=t.n(p),u=t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"),m=t.n(u),b=t("./node_modules/@babel/runtime/helpers/inherits.js"),h=t.n(b),y=t("./node_modules/react/index.js"),g=t.n(y),f=(t("./node_modules/antd/es/button/style/css.js"),t("./node_modules/antd/es/button/index.js")),w=t("./node_modules/@babel/runtime/helpers/defineProperty.js"),C=t.n(w),v=(t("./node_modules/antd/es/form/style/css.js"),t("./node_modules/antd/es/form/index.js")),H=(t("./node_modules/antd/es/input/style/css.js"),t("./node_modules/antd/es/input/index.js")),x=(t("./node_modules/antd/es/select/style/css.js"),t("./node_modules/antd/es/select/index.js"));t("./node_modules/immutable/dist/immutable.es.js"),t("./node_modules/prop-types/index.js");function j(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function k(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?j(t,!0).forEach(function(n){C()(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):j(t).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}var _=x.a.Option,D=function(e){function n(e){var t;return o()(this,n),(t=c()(this,m()(n).call(this,e))).handleSubmit=function(e){e.preventDefault(),t.props.form.validateFields(function(e,n){e||t.props.Hdsubmit(n)})},t.state={},t}return h()(n,e),i()(n,[{key:"render",value:function(){var e=this.props.form.getFieldDecorator,n=this.props,t=n.Hdbtn,a=(n.Hdchange,n.Hddata),r=(n.Hdsubmit,n.layout);return g.a.createElement("div",null,g.a.createElement(v.a,{layout:r,onSubmit:this.handleSubmit},a.map(function(n,t){return g.a.createElement(v.a.Item,{key:t,label:n.label,labelCol:{span:n.labelCol},wrapperCol:{span:n.wrapperCol}},e("".concat(n.key),{rules:[{required:n.required,message:"".concat(n.placeholder)},{pattern:n.reg,message:n.message}]})("password"==n.type?g.a.createElement(H.a.Password,{type:"".concat(n.type),placeholder:n.placeholder}):"select"==n.type?g.a.createElement(x.a,{placeholder:"请选择"},n.selectData.map(function(e,n){return g.a.createElement(_,{key:n,value:e.value},e.text)})):g.a.createElement(H.a,{type:"".concat(n.type),placeholder:n.placeholder})))}),t?g.a.createElement(f.a,{style:k({},t.style),block:t.block,type:t.type,htmlType:"submit"},t.text):""))}}]),n}(y.Component),E=D=v.a.create({name:"",onValuesChange:function(e,n,t){e.Hdchange(t)}})(D),O=function(e){function n(e){var t;return o()(this,n),(t=c()(this,m()(n).call(this,e))).onChange=function(e){console.log("监听数据变化:",e)},t.submit=function(e){console.log("点击按钮获取数据:",e)},t.state={searchData:[{key:"username",label:"标题",type:"text",labelCol:10,wrapperCol:14,reg:/^[a-zA-Z0-9 ]{0,10}$/,placeholder:"请输入搜索的标题",required:!0,message:"输入的格式不正确"}],submitData:[{key:"username",label:"用户名",type:"text",labelCol:5,wrapperCol:15,reg:/^[a-zA-Z0-9 ]{0,10}$/,placeholder:"请输入用户名",required:!0,message:"输入的格式只能为字母和数字,且长度0-10之间"},{key:"password",label:"密码",type:"password",labelCol:5,wrapperCol:15,reg:/^[a-zA-Z0-9 ]{0,10}$/,placeholder:"请输入密码",required:!0,validator:!1,message:"输入的格式只能为字母和数字,且长度0-10之间"},{key:"sel",label:"option",type:"select",selectData:[{value:"1",text:"第一"},{value:"2",text:"第二"}],labelCol:5,wrapperCol:15,placeholder:"请选择",required:!0}],btn:{text:"搜索",block:!1,type:"primary",style:{marginTop:"5px"}},subbtn:{text:"提交",block:!0,type:"primary",style:{width:"300px",marginLeft:"105px"}},submitCode:'import HdFormValidation from "../../components/hd-formValidation" \n      constructor(props) {\n        super(props);\n        this.state = {\n          submitData: [\n            {\n              key: "username",\n              label: "用户名",\n              type: "text",\n              labelCol: 5,\n              wrapperCol: 15,\n              reg: /^[a-zA-Z0-9 ]{0,10}$/,\n              placeholder: "请输入用户名",\n              required: true,\n              message: "输入的格式只能为字母和数字,且长度0-10之间"\n            },\n            {\n              key: "password",\n              label: "密码",\n              type: "password",\n              labelCol: 5,\n              wrapperCol: 15,\n              reg: /^[a-zA-Z0-9 ]{0,10}$/,\n              placeholder: "请输入密码",\n              required: true,\n              validator: false,\n              message: "输入的格式只能为字母和数字,且长度0-10之间"\n            },\n            {\n              key: "sel",\n              label: "option",\n              type: "select",\n              selectData: [\n                {\n                  value: "1",\n                  text: "第一"\n                },\n                {\n                  value: "2",\n                  text: "第二"\n                }\n              ],\n              labelCol: 5,\n              wrapperCol: 15,\n              placeholder: "请选择",\n              required: true\n            }\n          ],\n          subbtn: {\n            text: "提交",\n            block: true,\n            type: "primary",\n            style: {\n              width: "300px",\n              marginLeft: "105px"\n            }\n          }\n        };\n      }\n\n      <HdFormValidation Hdbtn={this.state.subbtn} Hdchange={this.onChange} Hddata={this.state.submitData} Hdsubmit={this.submit}></HdFormValidation>\n      ',searchCode:'\n      import HdFormValidation from "../../components/hd-formValidation";\n      constructor(props) {\n        super(props);\n        this.state = {\n          searchData: [\n            {\n              key: "username",\n              label: "标题",\n              type: "text",\n              labelCol: 10,\n              wrapperCol: 14,\n              reg: /^[a-zA-Z0-9 ]{0,10}$/,\n              placeholder: "请输入搜索的标题",\n              required: true,\n              message: "输入的格式不正确"\n            }\n          ],\n          btn: {\n            text: "搜索",\n            block: false,\n            type: "primary",\n            style: {\n              marginTop: "5px"\n            }\n          }\n        };\n      }\n\n      <HdFormValidation layout="inline" Hdbtn={this.state.btn} Hdchange={this.onChange} Hddata={this.state.searchData} Hdsubmit={this.submit}></HdFormValidation>\n      '},t}return h()(n,e),i()(n,[{key:"render",value:function(){return g.a.createElement("div",null,g.a.createElement(a.a,null,g.a.createElement(s.a,{md:"# HdFormValidation 表单组件\n--------------\n- 具有数据收集、校验和提交功能的表单，包含输入框、密码框、下拉选择框\n\n#\n\n#\n\n## 何时使用\n--------------\n\n- 用于创建一个实体或收集信息\n\n- 需要对输入的类型进行校验时\n\n#\n\n#\n\n## 代码演示 :\n"}),g.a.createElement(r.a,{code:this.state.searchCode,showCode:!0},g.a.createElement(E,{layout:"inline",Hdbtn:this.state.btn,Hdchange:this.onChange,Hddata:this.state.searchData,Hdsubmit:this.submit})),g.a.createElement(r.a,{code:this.state.submitCode,showCode:!0},g.a.createElement("div",{style:{width:"500px"}},g.a.createElement(E,{Hdbtn:this.state.subbtn,Hdchange:this.onChange,Hddata:this.state.submitData,Hdsubmit:this.submit}))),g.a.createElement(s.a,{md:"## Api :\n\n### HdFormValidation\n\n| 参数     | 说明                                         | 类型                                   | 默认值       | 版本 |\n| -------- | -------------------------------------------- | -------------------------------------- | ------------ | ---- |\n| layout   | 表单布局                                     | 'horizontal' ， 'vertical' ， 'inline' | 'horizontal' | -    |\n| Hdchange | 监听表单数据的变化                           | function(value){ }                     | -            | -    |\n| Hddata   | 用于生成表单的数据                           | Array [] ,详细 Api 请看下面 Hddata     | -            | -    |\n| Hdbtn    | 提交按钮，是否显示提交按钮已经按钮样式自定义 | { }                                    | -            | -    |\n| Hdsubmit | 表单提交触发的方法                           | function(value){ }                     | -            | -    |\n\n### Hddata\n\n| 参数        | 说明                              | 类型                      | 默认值 | 版本 |\n| ----------- | --------------------------------- | ------------------------- | ------ | ---- |\n| key         | 表单的属性 key                    | string                    | -      | -    |\n| label       | 表单 label 名称                   | string                    | 空     | -    |\n| type        | 表单的类型                        | \"text，password， select\" | text   | -    |\n| labelCol    | label 占据的等份                  | number                    | -      | -    |\n| wrapperCol  | 表单 占据的等份                   | number                    | -      | -    |\n| reg         | 自定义正则验证                    | Reg                       | -      | -    |\n| placeholder | 表单的 placeholder 属性           | string                    | -      | -    |\n| required    | 是否必填                          | Boolean                   | false  | -    |\n| message     | 配合 reg 使用，不匹配时的提示信息 | string                    | -      | -    |\n| selectData  | type 为 select 时 option 中的数据 | Array []                  | -      | -    |\n\n### Hdbtn\n\n| 参数  | 说明                                          | 类型    | 默认值 | 版本 |\n| ----- | --------------------------------------------- | ------- | ------ | ---- |\n| text  | 按钮文字内容                                  | string  | -      | -    |\n| block | 块级按钮                                      | Boolean | false  | -    |\n| type  | 按钮颜色 ,参考 Ant Design Button 按钮样式 Api | string  | text   | -    |\n| style | 可自定义 css 样式                             | { }     | -      | -    |\n\n## 任务列表\n--------------\n\n- [x] 基础用法\n- [ ] 扩展更多属性\n\n### 测试阶段 未完待续 ...\n"})))}}]),n}(y.Component);n.default=O}}]);
//# sourceMappingURL=19.chunk.js.map