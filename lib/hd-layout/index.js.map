{"version":3,"sources":["../../components/hd-layout/index.js"],"names":["Header","Content","Sider","HdLayout","props","sider","theme","logo","menus","title","titleCls","get","breakpoint","subTitle","icon","toggleCollapse","state","componentWillReceiveProps","nextProps","console","log","render","styleContext","context","className","style","children","atr","prefixCls","classnames","renderSider","renderSubtitle","renderHeaderMenu","Component","contextType","StyleContext"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Layout, Menu, Icon, Avatar, Dropdown, Spin } from \"antd\";\nimport { fromJs, Map, Set } from \"immutable\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport HdMenus from \"../hd-menus\";\nimport { StyleContext } from \"../context/style-context\";\nconst { Header, Content, Sider } = Layout;\n\nclass HdLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  renderHeaderMenu = () => {\n    return (\n      <Menu>\n        <Menu.Item key=\"password\" className=\"hd-layout-header-dropdown-menu-item\">\n          <Icon type=\"setting\" />\n          <span>修改密码</span>\n        </Menu.Item>\n        <Menu.Item key=\"signout\" className=\"hd-layout-header-dropdown-menu-item\">\n          <Icon type=\"logout\" />\n          <span>退出登录</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  componentWillReceiveProps(nextProps) {\n    console.log(\"nextProps\", nextProps);\n  }\n  renderSider = () => {\n    const { sider, theme, logo, menus, title } = this.props;\n    let titleCls = \"title\";\n    if (sider) {\n      titleCls = cls(titleCls, {\n        \"hide-title\": sider.get(\"collapsed\")\n      });\n    }\n    return sider ? (\n      <Sider theme={theme} trigger={null} collapsible width={sider.get(\"width\")} collapsed={sider.get(\"collapsed\")} breakpoint={sider.breakpoint} className=\"hd-layout-sider\">\n        <div className=\"hd-layout-logo\">\n          {logo}\n          <span className={titleCls}>{title}</span>\n        </div>\n        <HdMenus theme={theme} menus={menus} width={sider.get(\"width\")} collapsed={sider.get(\"collapsed\")} />\n      </Sider>\n    ) : null;\n  };\n  renderSubtitle = () => {\n    const { sider, logo, title, subTitle } = this.props;\n    if (sider) {\n      const icon =\n        typeof sider.get(\"collapsed\") === \"undefined\" ? null : <Icon type={sider.get(\"collapsed\") ? \"menu-unfold\" : \"menu-fold\"} className=\"collapse-icon\" onClick={() => this.toggleCollapse()} />;\n      return (\n        <>\n          {icon}\n          <span className=\"title\">{subTitle}</span>\n        </>\n      );\n    } else {\n      return (\n        <>\n          {logo}\n          <span className=\"title\">{title}</span>\n        </>\n      );\n    }\n  };\n  render() {\n    let styleContext = this.context;\n\n    const { className, style } = this.props;\n    const { children, theme, sider, logo, title, subTitle, menus, ...atr } = this.props;\n    const { toggleCollapse } = this.props;\n    const prefixCls = \"hd\";\n\n    const classnames = cls(prefixCls, className, {\n      [`${prefixCls}-layout-container`]: true\n    });\n\n    return (\n      <Layout className={classnames}>\n        {this.renderSider()}\n        <Layout className=\"hd-layout-main\">\n          <Header className=\"hd-layout-main-header\">\n            <div className=\"hd-layout-main-header-content\">\n              <div className=\"hd-layout-main-header-left\">\n                <div className=\"hd-layout-main-header-subtitle\">{this.renderSubtitle()}</div>\n              </div>\n              <div className=\"hd-layout-main-header-right\">\n                <div>\n                  {/* <Menu mode=\"horizontal\">\n                    <Menu.Item key=\"mail\">\n                      <Icon type=\"mail\" />\n                      Navigation One\n                    </Menu.Item>\n                  </Menu> */}\n                </div>\n                <div className=\"hd-layout-header-toolbar\">\n                  <Dropdown overlay={this.renderHeaderMenu} placement=\"bottomRight\">\n                    <div className=\"hd-layout-header-toolbar-content\">\n                      <Avatar className=\"user-avatar\" icon=\"user\" />\n                      <span className=\"user-name\">用户</span>\n                    </div>\n                  </Dropdown>\n                </div>\n              </div>\n            </div>\n          </Header>\n          <Content className=\"hd-layout-main-content\">{children}</Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nHdLayout.contextType = StyleContext;\n\nexport default HdLayout;\n"],"file":"index.js"}