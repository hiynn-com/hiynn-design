{"version":3,"sources":["../../components/filter/index.js"],"names":["HdFilter","state","filterShow","filterData","dictData","tabShow","setState","changeOption","itemData","index","flag","filterLists","push","children","map","item","id","checked","props","getFilterOptions","warning","deleteOption","splice","indexOf","items","componentWillMount","render","categoryId","name","paddingLeft","fontSize","value","Component","propTypes","PropTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { message, Icon, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nexport default class HdFilter extends Component {\n  /**\n   * filterShow:筛选面板收起或者展开标识\n   * dictData:筛选项数据\n   * filterData:选中的条件\n   */\n  state = {\n    filterShow: true,\n    filterData: [],\n    dictData: []\n  };\n  /**\n   * 参数验证\n   */\n  static propTypes = {\n    filterData: PropTypes.array.isRequired,\n    getFilterOptions: PropTypes.func.isRequired\n  };\n  /**\n   * 拿到用户传参初始化筛选项dictData\n   */\n  componentWillMount() {\n    let { filterData } = this.props;\n    filterData.map(item => item.children.map(items => (items.checked = false)));\n    this.setState({\n      dictData: filterData,\n      filterData: []\n    });\n  }\n  /*筛选条件展开收起*/\n  tabShow = () => {\n    const { filterShow } = this.state;\n    this.setState({\n      filterShow: !filterShow\n    });\n  };\n  /**\n   * 筛选条件选择\n   * itemData:选中的条件对象\n   * index:选中条件对象的所属索引值\n   * flag:是否已选择\n   */\n  changeOption = (itemData, index, flag) => {\n    if (!flag) {\n      const { dictData, filterData } = this.state;\n      let filterLists = [...filterData];\n      filterLists.push(itemData);\n      dictData[index].children.map(item => (item.id == itemData.id ? (item.checked = true) : item));\n      this.setState(\n        {\n          dictData,\n          filterData: [...filterLists]\n        },\n        () => {\n          this.props.getFilterOptions(this.state.filterData);\n        }\n      );\n    } else {\n      message.warning(\"已选择!\", 1);\n    }\n  };\n  /*删除筛选条件*/\n  deleteOption = itemData => {\n    const { dictData, filterData } = this.state;\n    filterData.splice(filterData.indexOf(itemData), 1);\n    dictData.map(items => items.children.map(item => (itemData.id == item.id ? (item.checked = false) : item)));\n    this.setState(\n      {\n        filterData,\n        dictData\n      },\n      () => {\n        this.props.getFilterOptions(this.state.filterData);\n      }\n    );\n  };\n  render() {\n    const { filterShow, filterData = [], dictData } = this.state;\n    return (\n      <div className=\"hd-filter-box\">\n        <ul className={`hd-filter-options ${filterShow ? \"hd-filter-tab-down\" : \"hd-filter-tab-up\"}`}>\n          <li className=\"hd-filter-option\">\n            <span className=\"hd-filter-option-name\">筛选：</span>\n            <ul className=\"hd-filter-option-lists\">\n              {filterData.map(item => (\n                <li key={`${item.categoryId}${item.id}`} className=\"hd-filter-options-tag\">\n                  {item.name}\n                  <Icon type=\"close\" style={{ paddingLeft: 5, fontSize: 12 }} onClick={() => this.deleteOption(item)} />\n                </li>\n              ))}\n            </ul>\n          </li>\n          {dictData.map((items, index) => (\n            <li key={items.id} className=\"hd-filter-option\">\n              <span className=\"hd-filter-option-name\">{items.value}：</span>\n              <ul className=\"hd-filter-option-lists\">\n                {items.children.map(item => (\n                  <li key={item.id} className={`hd-filter-options-list${item.checked ? \" hd-filter-option-selected\" : \"\"}`} onClick={() => this.changeOption(item, index, item.checked)}>\n                    {item.name}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n        <Button type=\"primary\" block onClick={this.tabShow}>\n          {filterShow ? \"收起\" : \"展开\"}\n          <Icon type=\"caret-up\" rotate={`${filterShow ? 0 : 180}`} />\n        </Button>\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}