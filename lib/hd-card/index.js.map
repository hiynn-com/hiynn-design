{"version":3,"sources":["../../components/hd-card/index.js"],"names":["HdCard","props","toFixed","num","s","times","Math","pow","des","parseInt","setPrecision","test","str","i","toString","len","split","length","state","value","dataArray","componentWillMount","precision","data","setState","tempArr","map","item","index","key","render","title","type","description","className","style","label","content","Component","defaultProps","propTypes","PropTypes","array","oneOfType","string","bool","number","object","oneOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './style'\n\nclass HdCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      dataArray: [],\n    };\n  }\n\n  componentWillMount() {\n    const { value, precision, data } = this.props\n    this.setState({\n      value: this.setPrecision(value, precision),\n    })\n    //遍历data数组并给每一项添加key值\n    if (data.length) {\n      let tempArr = [...data]\n      tempArr.map((item, index) => item.key = index)\n      this.setState({\n        dataArray: tempArr\n      })\n    }\n  }\n\n  //指定数值设置精度\n  toFixed = (num, s) => {\n    var times = Math.pow(10, s)\n    var des = num * times + 0.5\n    des = parseInt(des, 10) / times\n    return des + ''\n  }\n\n  setPrecision = (num, s) => {\n    if ((/^[0-9]*$/).test(num)) {                         //参数为整数\n      let str = ''\n      if (s > 0) {\n        for (let i = 0; i < s; i++) {\n          str += '0'\n        }\n        num = num.toString() + '.' + str\n      }\n    } else if (/^(-?\\d+)(\\.\\d+)?$/.test(num)) {          //参数为浮点数\n      let len = num.toString().split(\".\")[1].length\n      let str = ''\n      if (len < s) {                                    //原数字小数位小于指定小数\n        for (let i = 0; i < s - len; i++) {\n          str += '0'\n        }\n        num = num.toString() + str\n      } else if (len > s) {                             //原数字小数位大于指定小数\n        num = this.toFixed(num, s)\n      }\n    }\n    return num\n  }\n  render() {\n    const { title, type, description, className, style } = this.props\n    const { value, dataArray } = this.state\n    return (\n      <div className={'hd-card-wrap' + ' ' + type + ' ' + className} style={style} >\n        {\n          !!title ? <div className=\"hd-card-title\">{title}</div> : ''\n        }\n        <div className=\"hd-card-value\">{value}</div>\n        <div className=\"hd-card-desc\">\n          {description}\n        </div>\n        <div className=\"hd-card-content\">\n          {\n            dataArray.map(item => {\n              return (\n                <div className=\"hd-card-content-cell\" key={item.key}>\n                  <span>{item.label}</span>\n                  <span>{item.content}</span>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\nHdCard.defaultProps = {\n  data: [],\n  title: '',\n  value: 0,\n  type: 'inline',\n  precision: 0,\n  description: '',\n  className: '',\n}\nHdCard.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  precision: PropTypes.number,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.oneOf(['block', 'inline']),\n};\n\nexport default HdCard;"],"file":"index.js"}