{"version":3,"sources":["../../components/hd-filter/index.js"],"names":["HdFilter","state","filterShow","filterData","dictData","tabShow","setState","changeOption","itemData","index","flag","filterLists","push","children","map","item","id","checked","props","getFilterOptions","warning","deleteOption","splice","indexOf","items","componentWillMount","render","categoryId","name","paddingLeft","fontSize","value","Component","propTypes","PropTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { message, Icon, Button } from 'antd'\nimport PropTypes from 'prop-types'\nimport './style'\n\nexport default class HdFilter extends Component{\n  /**\n   * filterShow:筛选面板收起或者展开标识\n   * dictData:筛选项数据\n   * filterData:选中的条件\n   */\n  state={\n    filterShow:true,\n    filterData:[],\n    dictData:[],\n  }\n  /**\n   * 参数验证\n   */\n  static propTypes = {\n    filterData:PropTypes.array.isRequired,\n    getFilterOptions:PropTypes.func.isRequired,\n  }\n  /**\n   * 拿到用户传参初始化筛选项dictData\n   */\n  componentWillMount(){\n    let { filterData } = this.props\n    filterData.map(item=>item.children.map(items=>items.checked=false))\n    this.setState({\n        dictData:filterData,\n        filterData:[],\n    })\n  }\n  /*筛选条件展开收起*/\n  tabShow = () => {\n    const { filterShow } = this.state\n    this.setState({\n      filterShow:!filterShow,\n    })\n  }\n  /**\n   * 筛选条件选择\n   * itemData:选中的条件对象\n   * index:选中条件对象的所属索引值\n   * flag:是否已选择\n   */\n  changeOption = (itemData,index,flag) => {\n    if(!flag){\n      const { dictData, filterData } = this.state\n      let filterLists = [...filterData]\n      filterLists.push(itemData)\n      dictData[index].children.map(item=> (item.id == itemData.id ? item.checked=true:item))\n      this.setState({\n        dictData,\n        filterData:[...filterLists]\n      },()=>{\n        this.props.getFilterOptions(this.state.filterData)\n      })\n    }else{\n      message.warning('已选择!',1)\n    }\n  }\n  /*删除筛选条件*/\n  deleteOption = (itemData) => {\n    const { dictData, filterData } = this.state\n    filterData.splice(filterData.indexOf(itemData),1)\n    dictData.map(items=>items.children.map(item=> itemData.id == item.id ? item.checked=false:item))\n    this.setState({\n      filterData,\n      dictData,\n    },()=>{\n      this.props.getFilterOptions(this.state.filterData)\n    })\n  }\n  render(){\n    const { filterShow, filterData=[], dictData } = this.state\n    return(\n      <div className='hd-filter-box'>\n        <ul className={`hd-filter-options ${filterShow ? 'hd-filter-tab-down':'hd-filter-tab-up'}`}>\n          <li className='hd-filter-option'>\n            <span className='hd-filter-option-name'>筛选：</span>\n            <ul className='hd-filter-option-lists'>\n              {filterData.map(item=>(\n                <li key={`${item.categoryId}${item.id}`} className='hd-filter-options-tag'>\n                  {item.name}\n                  <Icon type=\"close\" style={{paddingLeft:5,fontSize:12}} onClick={()=>this.deleteOption(item)} />\n                </li>)\n              )}\n            </ul>\n          </li>\n          {dictData.map((items,index)=>(\n            <li key={items.id} className='hd-filter-option'>\n              <span className='hd-filter-option-name'>{items.value}：</span>\n              <ul className='hd-filter-option-lists'>\n                {items.children.map(item=>(\n                  <li key={item.id} className={`hd-filter-options-list${item.checked ? ' hd-filter-option-selected':''}`}\n                    onClick={()=>this.changeOption(item,index,item.checked)}>\n                    {item.name}\n                  </li>)\n                )}\n              </ul>\n            </li>\n          ))}\n        </ul>\n        <Button type='primary' block onClick={this.tabShow}>\n          {filterShow ? '收起':'展开'}\n          <Icon type=\"caret-up\" rotate={`${filterShow ? 0:180}`} />\n        </Button>\n      </div>\n    )\n  }\n}\n"],"file":"index.js"}