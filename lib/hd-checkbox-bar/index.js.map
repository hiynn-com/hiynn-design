{"version":3,"sources":["../../components/hd-checkbox-bar/index.js"],"names":["returnName","settings","arrows","centerMode","className","dots","infinite","slidesToScroll","slidesToShow","variableWidth","HdCheckboxBar","props","fetchOptions","url","axios","get","then","res","data","code","setState","options","refs","carousel","goTo","onChange","state","filter","item","checked","map","name","value","catch","err","console","log","componentDidMount","componentWillReceiveProps","nextProps","render","style","width","height","backgroundColor","icon","React","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Carousel } from \"antd\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\n\nconst returnName = \"label\";\n\nconst settings = {\n  arrows: true,\n  centerMode: false,\n  className: \"slider variable-width\",\n  dots: false,\n  infinite: false,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  variableWidth: true\n};\n\nclass HdCheckboxBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: this.props.options || []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.url) {\n      this.fetchOptions(this.props.url);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.url !== nextProps.url) {\n      this.fetchOptions(nextProps.url);\n    } else if (this.props.options !== nextProps.options) {\n      const options = nextProps.options || [];\n      this.setState({ options }, () => {\n        this.refs.carousel.goTo(0);\n      });\n    }\n  }\n\n  fetchOptions = url => {\n    axios\n      .get(url)\n      .then(res => {\n        if (res.data.code != 200) return;\n        this.setState(\n          {\n            options: res.data.data.options\n          },\n          () => {\n            this.refs.carousel.goTo(0);\n            this.props.onChange &&\n              this.props.onChange(\n                this.state.options\n                  .filter(item => item.checked)\n                  .map(item => ({\n                    name: returnName,\n                    value: item.value\n                  }))\n              );\n          }\n        );\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onChange = item => {\n    item.checked = !item.checked;\n    this.setState(\n      {\n        options: [...this.state.options]\n      },\n      () => {\n        this.props.onChange &&\n          this.props.onChange(\n            this.state.options\n              .filter(item => item.checked)\n              .map(item => ({\n                name: returnName,\n                value: item.value\n              }))\n          );\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hd-checkbox-bar\"\n        style={{\n          ...this.props.style,\n          width: this.props.width,\n          height: this.props.height\n        }}\n      >\n        <Carousel ref=\"carousel\" {...settings}>\n          {this.state.options.map(item => (\n            <div key={item.value}>\n              <div\n                className={classNames(\"hd-checkbox\", {\n                  \"hd-checkbox-checked\": item.checked\n                })}\n                onClick={() => this.onChange(item)}\n              >\n                <i className=\"hd-checkbox-icon\" style={{ backgroundColor: item.icon || \"transparent\" }} />\n                <span>{item.name}</span>\n              </div>\n            </div>\n          ))}\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default HdCheckboxBar;\n"],"file":"index.js"}